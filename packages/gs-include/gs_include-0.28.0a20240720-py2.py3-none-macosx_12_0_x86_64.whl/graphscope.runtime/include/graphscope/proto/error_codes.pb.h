// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: error_codes.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_error_5fcodes_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_error_5fcodes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_error_5fcodes_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_error_5fcodes_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_error_5fcodes_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gs {
namespace rpc {
enum Code : int {
  OK = 0,
  TIMEOUT_ERROR = 1,
  NOT_FOUND_ERROR = 2,
  CONNECTION_ERROR = 3,
  VINEYARD_ERROR = 4,
  COMPILATION_ERROR = 5,
  ALREADY_EXISTS_ERROR = 6,
  UDF_INTERNAL_ERROR = 7,
  UNAVAILABLE_ERROR = 8,
  INVALID_ARGUMENT_ERROR = 9,
  PERMISSION_DENIED_ERROR = 10,
  NETWORK_ERROR = 11,
  K8S_ERROR = 12,
  UNIMPLEMENTED_ERROR = 13,
  GREMLIN_QUERY_ERROR = 14,
  RETRIES_EXCEEDED_ERROR = 15,
  ANALYTICAL_ENGINE_INTERNAL_ERROR = 30,
  INTERACTIVE_ENGINE_INTERNAL_ERROR = 31,
  LEARNING_ENGINE_INTERNAL_ERROR = 32,
  COORDINATOR_INTERNAL_ERROR = 33,
  WORKER_RESULTS_INCONSISTENT_ERROR = 41,
  UNKNOWN_ERROR = 101,
  FATAL_ERROR = 102,
  Code_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Code_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Code_IsValid(int value);
extern const uint32_t Code_internal_data_[];
constexpr Code Code_MIN = static_cast<Code>(0);
constexpr Code Code_MAX = static_cast<Code>(102);
constexpr int Code_ARRAYSIZE = 102 + 1;
const ::google::protobuf::EnumDescriptor*
Code_descriptor();
template <typename T>
const std::string& Code_Name(T value) {
  static_assert(std::is_same<T, Code>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Code_Name().");
  return ::google::protobuf::internal::NameOfEnum(Code_descriptor(), value);
}
inline bool Code_Parse(absl::string_view name, Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Code>(
      Code_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace gs


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::gs::rpc::Code> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::gs::rpc::Code>() {
  return ::gs::rpc::Code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_error_5fcodes_2eproto_2epb_2eh
