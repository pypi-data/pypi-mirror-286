=====================================
Attachment Synchronize using patterns
=====================================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:10b4daeffd7c60c60a4b3ae6d9fff5db05cfb5ca6f8e397ff71cb007e26994c1
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-shopinvader%2Fpattern--import--export-lightgray.png?logo=github
    :target: https://github.com/shopinvader/pattern-import-export/tree/14.0/pattern_import_export_synchronize
    :alt: shopinvader/pattern-import-export

|badge1| |badge2| |badge3|

This module uses the pattern_import_export and attachment_synchronize modules to automate imports and exports.
Different functionalities that are not self-explanatory are used, so you can check the depending modules for
more context about this module's usage and configuration.

**Table of contents**

.. contents::
   :local:

Usage
=====

Here is the full workflow for imports and exports in this module. In italics are the modules relevant
to that particular functionality.

Exports
=======

1. Create a filter and a pattern.config for the model to export (*pattern_import_export*)

2. Create an attachment.synchronize.task of type "export" and configure it (*attachment_synchronize*)

3. Create and configure a pattern.export.task using elements of steps 1. and 2.

4. Call pattern.export.task.run_pattern_export_scheduler()

5. Observe the following:

  - A pattern.file is created from the filter and pattern configuration from step 1.
  - The result of that export is in the storage that you configured in step 2.

This is to be used with a cron to call run_pattern_export_scheduler() for automation.


Imports
=======

1. Create a pattern.config (*pattern_import_export*)

2. Create an attachment.synchronize.task of type "Import using pattern" and configure it (*attachment_synchronize*)

3. Call pattern.synchronize.task.run_import_scheduler()

4. Observe the following:

  - Files that match the configuration of attachment_synchronize_task are run through the import procedure
  - For every file, once imported, the patterned import is executed

This is to be used with a cron to call run_import_scheduler() for automation.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/shopinvader/pattern-import-export/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/shopinvader/pattern-import-export/issues/new?body=module:%20pattern_import_export_synchronize%0Aversion:%2014.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Akretion

Contributors
~~~~~~~~~~~~

`Akretion <https://www.akretion.com/>`_ :

* Kevin Khao <kevin.khao@akretion.com>
* Sebastien Beau <sebastien.beau@akretion.com>

Maintainers
~~~~~~~~~~~

.. |maintainer-kevinkhao| image:: https://github.com/kevinkhao.png?size=40px
    :target: https://github.com/kevinkhao
    :alt: kevinkhao
.. |maintainer-sebastienbeau| image:: https://github.com/sebastienbeau.png?size=40px
    :target: https://github.com/sebastienbeau
    :alt: sebastienbeau

Current maintainers:

|maintainer-kevinkhao| |maintainer-sebastienbeau| 

This module is part of the `shopinvader/pattern-import-export <https://github.com/shopinvader/pattern-import-export/tree/14.0/pattern_import_export_synchronize>`_ project on GitHub.

You are welcome to contribute.
