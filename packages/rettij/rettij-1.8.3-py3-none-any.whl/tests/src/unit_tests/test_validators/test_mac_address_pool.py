import re
import unittest

from rettij.topology.mac_address_pool import MacAddressPool


class MacAddressPoolTest(unittest.TestCase):
    """
    This TestCase contains tests regarding the MacAddressPool class.
    """

    def set_up(self) -> None:
        """
        Set up the TestCase instance variables.
        """
        # Reset used macs before each test
        MacAddressPool.macs_in_use = []

    def test_add_used_mac(self) -> None:
        """
        Add a mac address to the pool and check if it was added correctly.
        """
        mac: str = "01:00:00:AF:AF:AF"
        MacAddressPool.add_used_mac(mac)
        if mac not in MacAddressPool.macs_in_use:
            self.fail(f"The added mac address {mac} was not found in the pool")

    def test_generate_unique_mac(self) -> None:
        """
        Generate 100 mac addresses and check if they are valid and saved in the MacAddressPool.
        """
        generated_macs = []
        for i in range(0, 100):
            mac = MacAddressPool.generate_unique_mac()
            if not re.match("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", mac):
                self.fail(f"The mac address {mac} generated by the MacAddressPool is not a valid mac address")
            generated_macs.append(mac)

        for mac in generated_macs:
            if mac not in MacAddressPool.macs_in_use:
                self.fail(f"The mac address {mac} generated by the MacAddressPool was not found in the pool")
