Metadata-Version: 2.1
Name: django-command-exception
Version: 1.0.2
Summary: Django python exception model, admin, logging handler, middleware and excepthook
Keywords: django
Classifier: Framework :: Django
Classifier: License :: Public Domain
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: Django
Requires-Dist: setuptools

### Installation
```bash
$ pip install django-command-exception
```

#### `settings.py`
```python
INSTALLED_APPS+=['django_command_exception']
```

#### `migrate`
```bash
$ python manage.py migrate
```

### Models
model|table|columns/fields
-|-|-
`CommandException`|`django_command_exception`|id,command,exc_class,exc_message,exc_traceback,created_at

### Examples
`call_command`
```python
from django_command_exception.models import CommandException

try:
    call_command(name)
except Exception as e:
    CommandException(command=name).save()
```

`BaseCommand`
```python
from django_command_exception.models import CommandException

class BaseCommand(BaseCommand):
    def execute(self, *args, **options):
        try:
            return super().execute(*args, **options)
        except Exception as e:
            CommandException(command=type(self).__module__.split('.')[-1]).save()
```

`CommandExceptionMixin`
```python
from django_command_exception.mixins import CommandExceptionMixin

class Command(CommandExceptionMixin,BaseCommand):
    def handle(self, *args, **options):
        try:
            ...
        except Exception as e:
            self.error(e)
```

