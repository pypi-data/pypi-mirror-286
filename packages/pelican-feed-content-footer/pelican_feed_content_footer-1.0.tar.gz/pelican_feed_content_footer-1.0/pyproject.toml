[tool.poetry]
name = "pelican-feed-content-footer"
version = "1.0"
description = "Pelican plugin that adds a footer to RSS/Atom feed items content."
license = "AGPL-3.0-only"
authors = ["Tobias BÃ¶lz <tobias@boelz.eu>"]
readme = "README.md"
homepage = "https://tmb.codeberg.page/pelican-feed-content-footer/"
repository = "https://git.boelz.eu/tmb/pelican-feed-content-footer/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    {include = "pelican"}
]

[tool.poetry.dependencies]
python = "^3.10"
pelican = "^4.5"

[tool.poetry.group.dev.dependencies]
pelican = {version = "^4.5", extras = ["markdown"]}
nox = "^2024.3.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"

[tool.poetry.group.lint.dependencies]
black = "^24.2.0"
ruff = "^0.4.2"

[tool.poetry.group.coverage.dependencies]
coverage = "^7.3.2"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
pymdown-extensions = "^10.7.1"

[tool.black]
target-version = ["py310"]
skip-string-normalization = true

[tool.coverage.run]
branch = true
source = ["pelican"]
omit = ['*/tests/*']

[tool.coverage.report]
show_missing = true
fail_under = 100
omit = ['*/tests/*']

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PL",  # pylint
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT", # flake8-2020
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["pelican"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
