from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from timestep.api.openai.v1 import util
from timestep.api.openai.v1.models.base_model import Model


class FinetuneCompletionRequestInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prompt=None, completion=None):  # noqa: E501
        """FinetuneCompletionRequestInput - a model defined in OpenAPI

        :param prompt: The prompt of this FinetuneCompletionRequestInput.  # noqa: E501
        :type prompt: str
        :param completion: The completion of this FinetuneCompletionRequestInput.  # noqa: E501
        :type completion: str
        """
        self.openapi_types = {
            'prompt': str,
            'completion': str
        }

        self.attribute_map = {
            'prompt': 'prompt',
            'completion': 'completion'
        }

        self._prompt = prompt
        self._completion = completion

    @classmethod
    def from_dict(cls, dikt) -> 'FinetuneCompletionRequestInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FinetuneCompletionRequestInput of this FinetuneCompletionRequestInput.  # noqa: E501
        :rtype: FinetuneCompletionRequestInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prompt(self) -> str:
        """Gets the prompt of this FinetuneCompletionRequestInput.

        The input prompt for this training example.  # noqa: E501

        :return: The prompt of this FinetuneCompletionRequestInput.
        :rtype: str
        """
        return self._prompt

    @prompt.setter
    def prompt(self, prompt: str):
        """Sets the prompt of this FinetuneCompletionRequestInput.

        The input prompt for this training example.  # noqa: E501

        :param prompt: The prompt of this FinetuneCompletionRequestInput.
        :type prompt: str
        """

        self._prompt = prompt

    @property
    def completion(self) -> str:
        """Gets the completion of this FinetuneCompletionRequestInput.

        The desired completion for this training example.  # noqa: E501

        :return: The completion of this FinetuneCompletionRequestInput.
        :rtype: str
        """
        return self._completion

    @completion.setter
    def completion(self, completion: str):
        """Sets the completion of this FinetuneCompletionRequestInput.

        The desired completion for this training example.  # noqa: E501

        :param completion: The completion of this FinetuneCompletionRequestInput.
        :type completion: str
        """

        self._completion = completion
