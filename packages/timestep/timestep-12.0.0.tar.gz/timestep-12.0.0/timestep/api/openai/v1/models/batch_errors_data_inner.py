from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from timestep.api.openai.v1 import util
from timestep.api.openai.v1.models.base_model import Model


class BatchErrorsDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, message=None, param=None, line=None):  # noqa: E501
        """BatchErrorsDataInner - a model defined in OpenAPI

        :param code: The code of this BatchErrorsDataInner.  # noqa: E501
        :type code: str
        :param message: The message of this BatchErrorsDataInner.  # noqa: E501
        :type message: str
        :param param: The param of this BatchErrorsDataInner.  # noqa: E501
        :type param: str
        :param line: The line of this BatchErrorsDataInner.  # noqa: E501
        :type line: int
        """
        self.openapi_types = {
            'code': str,
            'message': str,
            'param': str,
            'line': int
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'param': 'param',
            'line': 'line'
        }

        self._code = code
        self._message = message
        self._param = param
        self._line = line

    @classmethod
    def from_dict(cls, dikt) -> 'BatchErrorsDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Batch_errors_data_inner of this BatchErrorsDataInner.  # noqa: E501
        :rtype: BatchErrorsDataInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> str:
        """Gets the code of this BatchErrorsDataInner.

        An error code identifying the error type.  # noqa: E501

        :return: The code of this BatchErrorsDataInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this BatchErrorsDataInner.

        An error code identifying the error type.  # noqa: E501

        :param code: The code of this BatchErrorsDataInner.
        :type code: str
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this BatchErrorsDataInner.

        A human-readable message providing more details about the error.  # noqa: E501

        :return: The message of this BatchErrorsDataInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this BatchErrorsDataInner.

        A human-readable message providing more details about the error.  # noqa: E501

        :param message: The message of this BatchErrorsDataInner.
        :type message: str
        """

        self._message = message

    @property
    def param(self) -> str:
        """Gets the param of this BatchErrorsDataInner.

        The name of the parameter that caused the error, if applicable.  # noqa: E501

        :return: The param of this BatchErrorsDataInner.
        :rtype: str
        """
        return self._param

    @param.setter
    def param(self, param: str):
        """Sets the param of this BatchErrorsDataInner.

        The name of the parameter that caused the error, if applicable.  # noqa: E501

        :param param: The param of this BatchErrorsDataInner.
        :type param: str
        """

        self._param = param

    @property
    def line(self) -> int:
        """Gets the line of this BatchErrorsDataInner.

        The line number of the input file where the error occurred, if applicable.  # noqa: E501

        :return: The line of this BatchErrorsDataInner.
        :rtype: int
        """
        return self._line

    @line.setter
    def line(self, line: int):
        """Sets the line of this BatchErrorsDataInner.

        The line number of the input file where the error occurred, if applicable.  # noqa: E501

        :param line: The line of this BatchErrorsDataInner.
        :type line: int
        """

        self._line = line
