from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from timestep.api.openai.v1 import util
from timestep.api.openai.v1.models.base_model import Model
from timestep.api.openai.v1.models.thread_object_tool_resources import \
    ThreadObjectToolResources  # noqa: E501


class ModifyThreadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tool_resources=None, metadata=None):  # noqa: E501
        """ModifyThreadRequest - a model defined in OpenAPI

        :param tool_resources: The tool_resources of this ModifyThreadRequest.  # noqa: E501
        :type tool_resources: ThreadObjectToolResources
        :param metadata: The metadata of this ModifyThreadRequest.  # noqa: E501
        :type metadata: object
        """
        self.openapi_types = {
            'tool_resources': ThreadObjectToolResources,
            'metadata': object
        }

        self.attribute_map = {
            'tool_resources': 'tool_resources',
            'metadata': 'metadata'
        }

        self._tool_resources = tool_resources
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'ModifyThreadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModifyThreadRequest of this ModifyThreadRequest.  # noqa: E501
        :rtype: ModifyThreadRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tool_resources(self) -> ThreadObjectToolResources:
        """Gets the tool_resources of this ModifyThreadRequest.


        :return: The tool_resources of this ModifyThreadRequest.
        :rtype: ThreadObjectToolResources
        """
        return self._tool_resources

    @tool_resources.setter
    def tool_resources(self, tool_resources: ThreadObjectToolResources):
        """Sets the tool_resources of this ModifyThreadRequest.


        :param tool_resources: The tool_resources of this ModifyThreadRequest.
        :type tool_resources: ThreadObjectToolResources
        """

        self._tool_resources = tool_resources

    @property
    def metadata(self) -> object:
        """Gets the metadata of this ModifyThreadRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.   # noqa: E501

        :return: The metadata of this ModifyThreadRequest.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this ModifyThreadRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.   # noqa: E501

        :param metadata: The metadata of this ModifyThreadRequest.
        :type metadata: object
        """

        self._metadata = metadata
