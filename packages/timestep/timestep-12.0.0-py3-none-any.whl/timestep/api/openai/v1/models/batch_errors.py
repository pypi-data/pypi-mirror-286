from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from timestep.api.openai.v1 import util
from timestep.api.openai.v1.models.base_model import Model
from timestep.api.openai.v1.models.batch_errors_data_inner import \
    BatchErrorsDataInner  # noqa: E501


class BatchErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object=None, data=None):  # noqa: E501
        """BatchErrors - a model defined in OpenAPI

        :param object: The object of this BatchErrors.  # noqa: E501
        :type object: str
        :param data: The data of this BatchErrors.  # noqa: E501
        :type data: List[BatchErrorsDataInner]
        """
        self.openapi_types = {
            'object': str,
            'data': List[BatchErrorsDataInner]
        }

        self.attribute_map = {
            'object': 'object',
            'data': 'data'
        }

        self._object = object
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'BatchErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Batch_errors of this BatchErrors.  # noqa: E501
        :rtype: BatchErrors
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self) -> str:
        """Gets the object of this BatchErrors.

        The object type, which is always `list`.  # noqa: E501

        :return: The object of this BatchErrors.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object: str):
        """Sets the object of this BatchErrors.

        The object type, which is always `list`.  # noqa: E501

        :param object: The object of this BatchErrors.
        :type object: str
        """

        self._object = object

    @property
    def data(self) -> List[BatchErrorsDataInner]:
        """Gets the data of this BatchErrors.


        :return: The data of this BatchErrors.
        :rtype: List[BatchErrorsDataInner]
        """
        return self._data

    @data.setter
    def data(self, data: List[BatchErrorsDataInner]):
        """Sets the data of this BatchErrors.


        :param data: The data of this BatchErrors.
        :type data: List[BatchErrorsDataInner]
        """

        self._data = data
