from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from timestep.api.openai.v1 import util
from timestep.api.openai.v1.models.base_model import Model


class CreateAssistantRequestToolResourcesCodeInterpreter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_ids=[]):  # noqa: E501
        """CreateAssistantRequestToolResourcesCodeInterpreter - a model defined in OpenAPI

        :param file_ids: The file_ids of this CreateAssistantRequestToolResourcesCodeInterpreter.  # noqa: E501
        :type file_ids: List[str]
        """
        self.openapi_types = {
            'file_ids': List[str]
        }

        self.attribute_map = {
            'file_ids': 'file_ids'
        }

        self._file_ids = file_ids

    @classmethod
    def from_dict(cls, dikt) -> 'CreateAssistantRequestToolResourcesCodeInterpreter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateAssistantRequest_tool_resources_code_interpreter of this CreateAssistantRequestToolResourcesCodeInterpreter.  # noqa: E501
        :rtype: CreateAssistantRequestToolResourcesCodeInterpreter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_ids(self) -> List[str]:
        """Gets the file_ids of this CreateAssistantRequestToolResourcesCodeInterpreter.

        A list of [file](/docs/api-reference/files) IDs made available to the `code_interpreter` tool. There can be a maximum of 20 files associated with the tool.   # noqa: E501

        :return: The file_ids of this CreateAssistantRequestToolResourcesCodeInterpreter.
        :rtype: List[str]
        """
        return self._file_ids

    @file_ids.setter
    def file_ids(self, file_ids: List[str]):
        """Sets the file_ids of this CreateAssistantRequestToolResourcesCodeInterpreter.

        A list of [file](/docs/api-reference/files) IDs made available to the `code_interpreter` tool. There can be a maximum of 20 files associated with the tool.   # noqa: E501

        :param file_ids: The file_ids of this CreateAssistantRequestToolResourcesCodeInterpreter.
        :type file_ids: List[str]
        """
        if file_ids is not None and len(file_ids) > 20:
            raise ValueError("Invalid value for `file_ids`, number of items must be less than or equal to `20`")  # noqa: E501

        self._file_ids = file_ids
