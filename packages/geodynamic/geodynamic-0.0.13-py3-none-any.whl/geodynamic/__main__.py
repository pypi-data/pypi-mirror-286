import os
import argparse

parser = argparse.ArgumentParser(prog='geodynamic', description='Parsing GeoGebra construction file into SVG image.')
parser.add_argument('ggbfile',
                    help='GeoGebra file to parse')
parser.add_argument('-o', '--output', type=str,
                    help="SVG file to export into")
parser.add_argument('-px', nargs=2,
                    help="image width and height in px (values: num or auto)")
parser.add_argument('-s', '--style', type=str, default='pandora.json',
                    help="JSON file with style definitions")

args = parser.parse_args()

def create_tempfile_for_manim():
    f = open('temp.py', 'w')
    f.write('''\
#this file has been autogenerated by geodynamic

from geodynamic.manim_dynamic import *

class Pandora(GeoDynamic):
	def construct(self):
		self.loadGeoGebra(''' + "'" + args.ggbfile + "'" + ''', style_json_file = ''' + "'" + args.style + "'" + ''', px_size = ''' + str(args.px) + ''', debug = False)
		#print(self.geo)
		self.exportSVG(''' + "'" + args.output + "'" + ''')
        ''')
    f.close()

if 'ggbfile' in args:
    if not os.path.exists(args.ggbfile):
        print('file ' + args.ggbfile + ' is not exist')
        exit(-1)
        
    if args.output is None:
        args.__setattr__('output', args.ggbfile.replace('.ggb', '.svg'))
    
    create_tempfile_for_manim()
    print('Running manim... [be patient, first run may take a longer time]')
    os.system('manim temp.py Pandora')
    
    print('-----------------')
    print("SVG file exported: '" + args.ggbfile.replace('.ggb', '.svg') + "'\n\n")
