[project]
name = "jdbc-wrapper"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "phi", email = "phi.friday@gmail.com" }]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Framework :: AsyncIO",
]
requires-python = ">= 3.9"
dependencies = [
    "jpype1>=1.2.1",
    "typing-extensions>=4.4.0",
    "tomli>=1.1.0 ; python_version < '3.11'",
]

[project.optional-dependencies]
asyncio = ["greenlet"]
sqlalchemy = ["sqlalchemy[asyncio]>=2", "jdbc-wrapper[asyncio]"]
typing = ["types-greenlet"]
test = [
    "jdbc-wrapper[asyncio,sqlalchemy]",
    "pytest>=8.2.2",
    "filelock>=3.15.4",
    "pytest-xdist[psutil]>=3.6.1",
    "anyio>=4.4.0",
    "pytest-dotenv>=0.5.2",
    "pytest-cov>=5.0.0",
    "pytest-icdiff>=0.9",
]

[tool.rye]
managed = true
dev-dependencies = [
    "ipykernel>=6.29.5",
    "ruff==0.5.2",
    "pre-commit>=3.7.1",
    "jdbc-wrapper[typing,test,asyncio,sqlalchemy]",
]
[tool.rye.scripts]
lint = { chain = ["lint:check", "lint:format"] }
"lint:check" = "ruff check src tests --fix"
"lint:format" = "ruff format src tests"
check = "pre-commit run --all-files --show-diff-on-failure"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/jdbc_wrapper"]

[tool.pytest.ini_options]
addopts = "-n auto --cov=src/jdbc_wrapper --cov-report html --cov-report=xml"
testpaths = ["tests"]
markers = ["local: mark a test as local"]

[tool.coverage.run]
omit = [
    "tests/**/*",
    "src/jdbc_wrapper/_loader/**/*.py",
    "src/jdbc_wrapper/**/utils*.py",
    "src/jdbc_wrapper/_sqlalchemy/**/*_async.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if sys.version_info >=",
]
