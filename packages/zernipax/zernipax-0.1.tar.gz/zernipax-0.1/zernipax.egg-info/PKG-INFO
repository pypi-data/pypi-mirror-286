Metadata-Version: 2.1
Name: zernipax
Version: 0.1
Summary: Includes functions to generate Zernike modes and Calculate Zernike polynomials and their derivatives using JAX.
Home-page: https://github.com/PlasmaControl/FastZernike/
Author: Yigit Gunsur Elmacioglu, Rory Conlin, Egemen Kolemen
Author-email: PlasmaControl@princeton.edu
License: MIT
Keywords: zernike polynomials,optics,astrophysics,spectral simulation,basis,orthogonal polynomials,parallel computing,JAX
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: jax[cpu]<=0.5.0,>=0.3.2
Requires-Dist: matplotlib<=4.0.0,>=3.5.0
Requires-Dist: mpmath>=1.0.0
Requires-Dist: numpy<2.0.0,>=1.20.0
Requires-Dist: nvgpu
Requires-Dist: psutil
Requires-Dist: pylatexenc<=3.0,>=2.0
Requires-Dist: scipy<2.0.0,>=1.7.0
Requires-Dist: termcolor
Requires-Dist: colorama

# Zernipax
A python library to calculate Zernike Polynomials fast and accurately using JAX.


To create conda environment:
```
conda create --name zernipax-env 'python>=3.8, <=3.12'
conda activate zernipax-env
pip install -r requirements.txt
```

or, if you want to contribute
```
pip install -r dev-requirement.txt
```
