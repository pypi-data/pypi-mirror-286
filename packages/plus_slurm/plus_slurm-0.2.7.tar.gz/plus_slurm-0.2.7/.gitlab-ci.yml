default:
  image: debian:latest
  before_script: |
    apt-get update
    apt-get install -y curl git wget jq
    export APPTAINER_URL=$(wget -qO- 'https://api.github.com/repos/apptainer/apptainer/releases/latest' | grep '/apptainer_' | cut -d '"' -f4)
    wget -O /tmp/apptainer.deb $APPTAINER_URL
    apt install -yq /tmp/apptainer.deb
    curl -fsSL https://pixi.sh/install.sh | bash
    export PATH=$PATH:/root/.pixi/bin
    curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz -C /usr/local/bin

stages:
  - test
  - build
  - deploy

test:
  image: debian:latest
  stage: test
  script: |
    pixi run -e ${test_env} lint_ci
    pixi run -e ${test_env} test
    coveralls report
  parallel:
    matrix:
      - test_env: ['testpy39', 'testpy310', 'testpy311', 'testpy312']
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG

test_docs:
  stage: test
  script:
    - apt-get install -y make
    - pixi run build_docs
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG

build:
  stage: build
  dependencies:
    - test
  script: |
    pixi run hatch build
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+\.dev[0-9]+$/
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  artifacts:
    paths:
      - dist/

publish-test:
  stage: deploy
  dependencies:
    - build
  id_tokens:
    TESTPYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: testpypi
  script:
    - oidc_token=$(pixi run python -m id TESTPYPI)
    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://test.pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    - pixi run hatch -v publish --repo test --user __token__ --auth "${api_token}"

  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+\.dev[0-9]+$/

  environment:
    name: pypi staging

publish:
  stage: deploy
  dependencies:
    - build
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    - oidc_token=$(pixi run python -m id PYPI)
    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    - pixi run hatch -v publish --user __token__ --auth "${api_token}"

  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/

  environment:
    name: pypi