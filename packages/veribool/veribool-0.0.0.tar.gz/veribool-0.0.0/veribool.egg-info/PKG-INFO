Metadata-Version: 2.1
Name: veribool
Version: 0.0.0
Summary: Verify various properties of boolean expressions using a concise DSL.
Author-email: Ronak Badhe <ronak.badhe@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Ronak Badhe
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the \Software\), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED \AS IS\, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        
Project-URL: Homepage, https://github.com/r2dev2/veribool
Project-URL: Repository, https://github.com/r2dev2/veribool
Project-URL: Issues, https://github.com/r2dev2/veribool/issues
Keywords: compiler,verification,dsl,boolean,logic
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE

# VeriBool

Verify properties of boolean expressions using a concise DSL.

<p align="center">
<img src="./assets/logo.webp" alt="logo" />
</p>

> I _know_ you just want to press that button

## Installation

```shell
python3 -m pip install veribool
```

## Usage

```
# directly compile the expression to a python lambda expression
# add the -i/--interactive flag to drop into a python interpreter with
# fn = <the boolean expression as a lambda>
$: veribool compile "x'y' + x'z + xyz"
lambda x, y, z, **_kwargs: (((not x) and (not y)) or (((not x) and z) or (x and y and z)))

# find a diverging input for two boolean expressions
$: veribool diff "x xnor (yz)" "x'y' + x'z + xyz"
[0, 1, 0] - True vs False

# $? == 0 if expressions match
$: veribool diff "x xnor (yz)" "x'y' + x'z' + xyz" && echo equal
equal

# generate truth table
$: veribool truth "x xnor (yz)"
[0, 0, 0] - True
[0, 0, 1] - True
[0, 1, 0] - True
[0, 1, 1] - False
[1, 0, 0] - False
[1, 0, 1] - False
[1, 1, 0] - False
[1, 1, 1] - True
```

### DSL

This project implements a compiler for a boolean expression DSL closely modeling mathematical
boolean algebra notation.

Rules:
* each variable is 1 case-sensitive alphabetical character
* parenthesis exist
* `x'` is the complement of `x`
* `xy` is the `and` of `x` and `y`
* `x + y` is the `or` of `x` and `y`
* `x ^ y` and `x xor y` are the `xor` of `x` and `y`
* `x xnor y` is the `xnor` of `x` and `y`
* order of operations is: `parenthesis`, `not`, `and` followed by the rest of the operators

## Roadmap

- [ ] use z3 as a backend
- [ ] add some basic simplifications
- [ ] output to verilog / other languages


## Developers

Developed by [Ronak Badhe](https://github.com/r2dev2)
