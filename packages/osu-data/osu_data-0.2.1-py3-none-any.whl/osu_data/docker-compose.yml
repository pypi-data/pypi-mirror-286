version: "2.18.1"
services:
  # Download files from https://data.ppy.sh
  osu.mysql.dl:
    image: osu.mysql.dl
    stdin_open: true
    container_name: osu.mysql.dl
    build:
      context: .
      dockerfile: osu.mysql.dl.Dockerfile
      args:
        - DB_URL=${DB_URL}
        - CACHE_DIR=/var/lib/osu/osu.mysql
        - OSU_BEATMAP_DIFFICULTY=${OSU_BEATMAP_DIFFICULTY}
        - OSU_BEATMAPS=${OSU_BEATMAPS}
        - OSU_BEATMAPSETS=${OSU_BEATMAPSETS}
        - OSU_COUNTS=${OSU_COUNTS}
        - OSU_DIFFICULTY_ATTRIBS=${OSU_DIFFICULTY_ATTRIBS}
        - OSU_SCORES=${OSU_SCORES}
        - OSU_USER_STATS=${OSU_USER_STATS}
        - OSU_BEATMAP_DIFFICULTY_ATTRIBS=${OSU_BEATMAP_DIFFICULTY_ATTRIBS}
        - OSU_BEATMAP_FAILTIMES=${OSU_BEATMAP_FAILTIMES}
        - OSU_BEATMAP_PERFORMANCE_BLACKLIST=${OSU_BEATMAP_PERFORMANCE_BLACKLIST}
        - OSU_USER_BEATMAP_PLAYCOUNT=${OSU_USER_BEATMAP_PLAYCOUNT}
        - SAMPLE_USERS=${SAMPLE_USERS}
    volumes:
      - osu.mysql.init.vol:/var/lib/osu/osu.mysql.init
      - /var/lib/osu/osu.mysql/:/var/lib/osu/osu.mysql/

  # Uses files from osu.mysql to initialize our mysql database
  osu.mysql:
    image: mysql
    restart: unless-stopped
    container_name: osu.mysql
    build:
      context: .
      dockerfile: osu.mysql.Dockerfile
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=osu
      - MYSQL_TCP_PORT=${MYSQL_PORT}
    volumes:
      - osu.mysql.init.vol:/docker-entrypoint-initdb.d/
    depends_on:
      osu.mysql.dl:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "/bin/sh", "/osu.mysql.healthcheck.sh" ]
      interval: 3s
      timeout: 15s
      retries: 500
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    expose:
      - ${MYSQL_PORT}

  # Downloads .osu files
  # Will only be activated if profile `files` is activated.
  # > docker compose --profile files up
  osu.files:
    image: osu.files
    restart: unless-stopped
    stdin_open: true
    container_name: osu.files
    build:
      context: .
      dockerfile: osu.files.Dockerfile
      args:
        - FILES_URL=${FILES_URL}
    working_dir: /var/lib/osu/osu.files
    healthcheck:
      # Test if SERVICE_HEALTHY is 1
      test: [ "CMD", "/bin/sh", "/osu.files.healthcheck.sh"  ]
      interval: 3s
      timeout: 15s
      retries: 500
    volumes:
      - /var/lib/osu/osu.files/:/var/lib/osu/osu.files/
    profiles:
      - files
    ports:
      - ${NGINX_PORT}:80

volumes:
  osu.mysql.init.vol:
