# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from openobd_protocol.Messages import Empty_pb2 as openobd__protocol_dot_Messages_dot_Empty__pb2
from openobd_protocol.Session.Messages import BusConfiguration_pb2 as openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2
from openobd_protocol.Session.Messages import ServiceResult_pb2 as openobd__protocol_dot_Session_dot_Messages_dot_ServiceResult__pb2
from openobd_protocol.Session.Messages import Session_pb2 as openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2


class sessionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authenticate = channel.unary_unary(
                '/openOBD.v1.session/authenticate',
                request_serializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
                response_deserializer=openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.FromString,
                )
        self.openSessionTokenStream = channel.unary_stream(
                '/openOBD.v1.session/openSessionTokenStream',
                request_serializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
                response_deserializer=openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.FromString,
                )
        self.configureBus = channel.unary_unary(
                '/openOBD.v1.session/configureBus',
                request_serializer=openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
                )
        self.configureBuses = channel.stream_unary(
                '/openOBD.v1.session/configureBuses',
                request_serializer=openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
                )
        self.finish = channel.unary_unary(
                '/openOBD.v1.session/finish',
                request_serializer=openobd__protocol_dot_Session_dot_Messages_dot_ServiceResult__pb2.ServiceResult.SerializeToString,
                response_deserializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
                )


class sessionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openSessionTokenStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def configureBus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def configureBuses(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_sessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.authenticate,
                    request_deserializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
                    response_serializer=openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.SerializeToString,
            ),
            'openSessionTokenStream': grpc.unary_stream_rpc_method_handler(
                    servicer.openSessionTokenStream,
                    request_deserializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
                    response_serializer=openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.SerializeToString,
            ),
            'configureBus': grpc.unary_unary_rpc_method_handler(
                    servicer.configureBus,
                    request_deserializer=openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
            ),
            'configureBuses': grpc.stream_unary_rpc_method_handler(
                    servicer.configureBuses,
                    request_deserializer=openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
            ),
            'finish': grpc.unary_unary_rpc_method_handler(
                    servicer.finish,
                    request_deserializer=openobd__protocol_dot_Session_dot_Messages_dot_ServiceResult__pb2.ServiceResult.FromString,
                    response_serializer=openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'openOBD.v1.session', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class session(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openOBD.v1.session/authenticate',
            openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
            openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def openSessionTokenStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/openOBD.v1.session/openSessionTokenStream',
            openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.SerializeToString,
            openobd__protocol_dot_Session_dot_Messages_dot_Session__pb2.SessionToken.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def configureBus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openOBD.v1.session/configureBus',
            openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def configureBuses(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/openOBD.v1.session/configureBuses',
            openobd__protocol_dot_Session_dot_Messages_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def finish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openOBD.v1.session/finish',
            openobd__protocol_dot_Session_dot_Messages_dot_ServiceResult__pb2.ServiceResult.SerializeToString,
            openobd__protocol_dot_Messages_dot_Empty__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
