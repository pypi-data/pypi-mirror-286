from db_copilot.contract.api_core import APIManager
from db_copilot.contract.llm_core import LLMType

DEFAULT_TOOL_TEMPLATE = f"""
This tool can help you analysis data or generate diagrams.
- You can generate a markdown python code block (e.g., ```python\n...\n```) to specify how to perform data analysis or show diagrams.
- You can only use the following packages in the generated python code block:
  - plotly.express # all diagrams should be generated using this package
  - pandas
  - numpy
  - statsmodels
  - scikit-learn
  - scipy
- For analysis, please print the results to the standard output.
  - you can use `preprocess_dataframe` to convert the dataframe to known types, e.g., `df = preprocess_dataframe(df)`
  - if regression analysis is needed, please print the regression summary, e.g., `print(sm.OLS(...).fit().summary())`
  - if classification analysis is needed, please print the classification report, e.g., `print(classification_report(...))`
- For diagrams,
  - please use plotly.express (px) to generate the diagram. Don't use other libraries like pyplot or matplotlib, etc.
  - the figure is assigned to the variable res, e.g., "res = px.bar(...).to_json()".
  - Please ensure that the final variable res is a json string generated by plotly to_json() method.
  - in plotly, to enter dates directly in the grid, you need to use the format: yyyy-mm-dd HH:MM:SS.ssssss. For example, "2014-12", "2014012014 16", etc.
  - The diagrams will be visualized to users automatically, so you should not write other code to display it: that will result in duplicate.
- You are also allowed to present table data frame to user, e.g., `res = df`, where df is a pandas DataFrame.
- In the generated python code block, you need to get the SQL result in dataframe format by api, e.g., `df={APIManager.GET_CODE_RESULT.template.format(code_id=1)}`.
- If you want to reuse previous python code to show previous diagram, you can also get the python result by api, e.g., `res = {APIManager.GET_CODE_RESULT.template.format(code_id=2)}`
- Note that, we can not leverage the code execution result if the code_id does not exist in previous history or current response.

""".strip()


TOOL_TEMPLATES = {}

TOOL_TEMPLATES[LLMType.GPT35_TURBO] = DEFAULT_TOOL_TEMPLATE
TOOL_TEMPLATES[LLMType.GPT4_DV3] = DEFAULT_TOOL_TEMPLATE