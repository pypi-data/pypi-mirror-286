Metadata-Version: 2.1
Name: lmkapp
Version: 1.2.0.dev2
Summary: Stop watching your code run
Project-URL: Homepage, https://github.com/lmkapp/lmk
Author-email: Cam Feenstra <me@camfeenstra.com>
License: Copyright 2023 Cameron Feenstra
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
License-File: LICENSE.txt
Keywords: IPython,Jupyter,Widgets
Classifier: Framework :: Jupyter
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Requires-Dist: aiohttp<4
Requires-Dist: blinker<2
Requires-Dist: pydantic<2
Requires-Dist: python-dateutil<3
Requires-Dist: typing-extensions<4.7
Requires-Dist: urllib3<2
Provides-Extra: cli
Requires-Dist: aiosqlite<1; extra == 'cli'
Requires-Dist: click<9; extra == 'cli'
Requires-Dist: psutil; extra == 'cli'
Requires-Dist: sqlalchemy[asyncio]<3,>=2; extra == 'cli'
Provides-Extra: dev
Requires-Dist: build>=1.0.0; extra == 'dev'
Requires-Dist: bump2version==1.*; extra == 'dev'
Requires-Dist: jupyterlab==4.*; extra == 'dev'
Requires-Dist: ruff==0.5.4; extra == 'dev'
Requires-Dist: tox>=4.2; extra == 'dev'
Provides-Extra: docs
Requires-Dist: novella~=0.2.6; extra == 'docs'
Requires-Dist: pydoc-markdown[novella]~=4.8.2; extra == 'docs'
Provides-Extra: jupyter
Requires-Dist: ipykernel; extra == 'jupyter'
Requires-Dist: ipython>=6.1.0; extra == 'jupyter'
Requires-Dist: ipywidgets>=7.0.0; extra == 'jupyter'
Provides-Extra: publish
Requires-Dist: twine; extra == 'publish'
Provides-Extra: test
Requires-Dist: jupyterlab; extra == 'test'
Requires-Dist: notebook; extra == 'test'
Requires-Dist: pytest-asyncio~=0.21.1; extra == 'test'
Requires-Dist: pytest~=7.4.0; extra == 'test'
Requires-Dist: selenium==4.16.0; extra == 'test'
Requires-Dist: webdriver-manager~=4.0.1; extra == 'test'
Provides-Extra: types
Requires-Dist: mypy<2,>=1; extra == 'types'
Requires-Dist: types-psutil; extra == 'types'
Requires-Dist: types-python-dateutil; extra == 'types'
Description-Content-Type: text/markdown


# LMK Python Client

<!-- [![Build Status](https://travis-ci.org/cfeenstra67/lmk.svg?branch=master)](https://travis-ci.org/cfeenstra67/lmk)
[![codecov](https://codecov.io/gh/cfeenstra67/lmk/branch/master/graph/badge.svg)](https://codecov.io/gh/cfeenstra67/lmk) -->

## Installation

You can install using `pip`:

```bash
pip install 'lmkapp[cli,jupyter]'
```

If you are using Jupyter Notebook 5.2 or earlier, you may also need to enable
the nbextension:
```bash
jupyter nbextension enable --py [--sys-prefix|--user|--system] lmk
```

## Development Installation

Create a dev environment:
```bash
python -m venv venv
```

Install the python package. This will also build the TS package.
```bash
pip install -e ".[dev,jupyter,cli,docs,types]"
```

## Docs Development

To build the docs, run:
```bash
pnpm build:docs
```
To run a development server, run:
```bash
pnpm dev:docs
```

## Jupyter Development

When developing your extensions, you need to manually enable your extensions with the
notebook / lab frontend. For lab, this is done by the command:

```bash
jupyter labextension develop --overwrite .
pnpm build
```

For classic notebook, you need to run:

```bash
jupyter nbextension install --sys-prefix --symlink --overwrite --py lmk
jupyter nbextension enable --sys-prefix --py lmk
```

Note that the `--symlink` flag doesn't work on Windows, so you will here have to run
the `install` command every time that you rebuild your extension. For certain installations
you might also need another flag instead of `--sys-prefix`, but we won't cover the meaning
of those flags here.

### How to see your changes
#### Typescript:
If you use JupyterLab to develop then you can watch the source directory and run JupyterLab at the same time in different
terminals to watch for changes in the extension's source and automatically rebuild the widget.

```bash
# Watch the source directory in one terminal, automatically rebuilding when needed
pnpm watch
# Run JupyterLab in another terminal
jupyter lab
```

After a change wait for the build to finish and then refresh your browser and the changes should take effect.

#### Python:
If you make a change to the python code then you will need to restart the notebook kernel to have it take effect.

## Updating the version

To update the version, install bump2version and use it to bump the version.
By default it will also create a tag.

```bash
pip install bump2version
bumpversion <pre|prekind|patch|minor|major>
```

## Publishing - PyPI

Build the python package:
```bash
pnpm build:python
```

Check the built assets:
```bash
pnpm pypi-check
```

Publish to the test index:
```bash
pnpm pypi-upload-test
```

Install from test index:
```bash
pip install --extra-index-url https://test.pypi.org/simple/ 'lmkapp[jupyter]==<version>'
```

Publish to real index:
```bash
pnpm pypi-upload
```

## Publishing - NPM

Build the npm package:
```bash
pnpm build:publish
```

Publish the npm package:
```bash
pnpm npm-publish
```
