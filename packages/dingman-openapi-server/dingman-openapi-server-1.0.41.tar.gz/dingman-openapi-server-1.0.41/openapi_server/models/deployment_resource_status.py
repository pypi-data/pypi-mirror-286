# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.deployment_resource_status_status import DeploymentResourceStatusStatus
from openapi_server import util

from openapi_server.models.deployment_resource_status_status import DeploymentResourceStatusStatus  # noqa: E501

class DeploymentResourceStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, kind=None, namespace=None, status=None):  # noqa: E501
        """DeploymentResourceStatus - a model defined in OpenAPI

        :param name: The name of this DeploymentResourceStatus.  # noqa: E501
        :type name: str
        :param kind: The kind of this DeploymentResourceStatus.  # noqa: E501
        :type kind: str
        :param namespace: The namespace of this DeploymentResourceStatus.  # noqa: E501
        :type namespace: str
        :param status: The status of this DeploymentResourceStatus.  # noqa: E501
        :type status: DeploymentResourceStatusStatus
        """
        self.openapi_types = {
            'name': str,
            'kind': str,
            'namespace': str,
            'status': DeploymentResourceStatusStatus
        }

        self.attribute_map = {
            'name': 'name',
            'kind': 'kind',
            'namespace': 'namespace',
            'status': 'status'
        }

        self._name = name
        self._kind = kind
        self._namespace = namespace
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentResourceStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentResourceStatus of this DeploymentResourceStatus.  # noqa: E501
        :rtype: DeploymentResourceStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeploymentResourceStatus.

        Name of the deployment resource  # noqa: E501

        :return: The name of this DeploymentResourceStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeploymentResourceStatus.

        Name of the deployment resource  # noqa: E501

        :param name: The name of this DeploymentResourceStatus.
        :type name: str
        """

        self._name = name

    @property
    def kind(self):
        """Gets the kind of this DeploymentResourceStatus.

        The kind of deployment resource  # noqa: E501

        :return: The kind of this DeploymentResourceStatus.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DeploymentResourceStatus.

        The kind of deployment resource  # noqa: E501

        :param kind: The kind of this DeploymentResourceStatus.
        :type kind: str
        """

        self._kind = kind

    @property
    def namespace(self):
        """Gets the namespace of this DeploymentResourceStatus.

        The namespace of deployment resource  # noqa: E501

        :return: The namespace of this DeploymentResourceStatus.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this DeploymentResourceStatus.

        The namespace of deployment resource  # noqa: E501

        :param namespace: The namespace of this DeploymentResourceStatus.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def status(self):
        """Gets the status of this DeploymentResourceStatus.


        :return: The status of this DeploymentResourceStatus.
        :rtype: DeploymentResourceStatusStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeploymentResourceStatus.


        :param status: The status of this DeploymentResourceStatus.
        :type status: DeploymentResourceStatusStatus
        """

        self._status = status
