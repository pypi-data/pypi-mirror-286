# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.volume_projected_sources_inner_config_map import VolumeProjectedSourcesInnerConfigMap
from openapi_server.models.volume_projected_sources_inner_secret import VolumeProjectedSourcesInnerSecret
from openapi_server import util

from openapi_server.models.volume_projected_sources_inner_config_map import VolumeProjectedSourcesInnerConfigMap  # noqa: E501
from openapi_server.models.volume_projected_sources_inner_secret import VolumeProjectedSourcesInnerSecret  # noqa: E501

class VolumeProjectedSourcesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_map=None, secret=None):  # noqa: E501
        """VolumeProjectedSourcesInner - a model defined in OpenAPI

        :param config_map: The config_map of this VolumeProjectedSourcesInner.  # noqa: E501
        :type config_map: VolumeProjectedSourcesInnerConfigMap
        :param secret: The secret of this VolumeProjectedSourcesInner.  # noqa: E501
        :type secret: VolumeProjectedSourcesInnerSecret
        """
        self.openapi_types = {
            'config_map': VolumeProjectedSourcesInnerConfigMap,
            'secret': VolumeProjectedSourcesInnerSecret
        }

        self.attribute_map = {
            'config_map': 'config_map',
            'secret': 'secret'
        }

        self._config_map = config_map
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt) -> 'VolumeProjectedSourcesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Volume_projected_sources_inner of this VolumeProjectedSourcesInner.  # noqa: E501
        :rtype: VolumeProjectedSourcesInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_map(self):
        """Gets the config_map of this VolumeProjectedSourcesInner.


        :return: The config_map of this VolumeProjectedSourcesInner.
        :rtype: VolumeProjectedSourcesInnerConfigMap
        """
        return self._config_map

    @config_map.setter
    def config_map(self, config_map):
        """Sets the config_map of this VolumeProjectedSourcesInner.


        :param config_map: The config_map of this VolumeProjectedSourcesInner.
        :type config_map: VolumeProjectedSourcesInnerConfigMap
        """

        self._config_map = config_map

    @property
    def secret(self):
        """Gets the secret of this VolumeProjectedSourcesInner.


        :return: The secret of this VolumeProjectedSourcesInner.
        :rtype: VolumeProjectedSourcesInnerSecret
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this VolumeProjectedSourcesInner.


        :param secret: The secret of this VolumeProjectedSourcesInner.
        :type secret: VolumeProjectedSourcesInnerSecret
        """

        self._secret = secret
