# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.pod_affinity_term import PodAffinityTerm
from openapi_server import util

from openapi_server.models.pod_affinity_term import PodAffinityTerm  # noqa: E501

class WeightedPodAffinityTerm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, weight=None, pod_affinity_term=None):  # noqa: E501
        """WeightedPodAffinityTerm - a model defined in OpenAPI

        :param weight: The weight of this WeightedPodAffinityTerm.  # noqa: E501
        :type weight: int
        :param pod_affinity_term: The pod_affinity_term of this WeightedPodAffinityTerm.  # noqa: E501
        :type pod_affinity_term: PodAffinityTerm
        """
        self.openapi_types = {
            'weight': int,
            'pod_affinity_term': PodAffinityTerm
        }

        self.attribute_map = {
            'weight': 'weight',
            'pod_affinity_term': 'pod_affinity_term'
        }

        self._weight = weight
        self._pod_affinity_term = pod_affinity_term

    @classmethod
    def from_dict(cls, dikt) -> 'WeightedPodAffinityTerm':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WeightedPodAffinityTerm of this WeightedPodAffinityTerm.  # noqa: E501
        :rtype: WeightedPodAffinityTerm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def weight(self):
        """Gets the weight of this WeightedPodAffinityTerm.


        :return: The weight of this WeightedPodAffinityTerm.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this WeightedPodAffinityTerm.


        :param weight: The weight of this WeightedPodAffinityTerm.
        :type weight: int
        """

        self._weight = weight

    @property
    def pod_affinity_term(self):
        """Gets the pod_affinity_term of this WeightedPodAffinityTerm.


        :return: The pod_affinity_term of this WeightedPodAffinityTerm.
        :rtype: PodAffinityTerm
        """
        return self._pod_affinity_term

    @pod_affinity_term.setter
    def pod_affinity_term(self, pod_affinity_term):
        """Sets the pod_affinity_term of this WeightedPodAffinityTerm.


        :param pod_affinity_term: The pod_affinity_term of this WeightedPodAffinityTerm.
        :type pod_affinity_term: PodAffinityTerm
        """

        self._pod_affinity_term = pod_affinity_term
