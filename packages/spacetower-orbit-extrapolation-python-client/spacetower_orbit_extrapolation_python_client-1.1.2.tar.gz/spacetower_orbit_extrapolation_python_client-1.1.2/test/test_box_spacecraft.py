# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 1.1.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.box_spacecraft import BoxSpacecraft

class TestBoxSpacecraft(unittest.TestCase):
    """BoxSpacecraft unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BoxSpacecraft:
        """Test BoxSpacecraft
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BoxSpacecraft`
        """
        model = BoxSpacecraft()
        if include_optional:
            return BoxSpacecraft(
                space_object_type = 'POINT_SPACECRAFT',
                x_dimension = 1.337,
                y_dimension = 1.337,
                z_dimension = 1.337,
                reflection_properties = spacetower_orbit_extrapolation_python_client.models.solar_array.SolarArray(
                    reflection_coefficient = 1.337, 
                    absorption_coefficient = 1.337, 
                    solar_array_area = 1.337, 
                    solar_array_normal = spacetower_orbit_extrapolation_python_client.models.solar_array_solar_array_normal.SolarArray_solarArrayNormal(
                        solar_array_normal_x = 1.337, 
                        solar_array_normal_y = 1.337, 
                        solar_array_normal_z = 1.337, ), ),
                drag_property_type = None
            )
        else:
            return BoxSpacecraft(
        )
        """

    def testBoxSpacecraft(self):
        """Test BoxSpacecraft"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
