{
  "src/lib/components/Carousel/Carousel.react.js": {
    "description": "Carousel is an carousel component.\r\nIt takes some setting properties\r\nYou put how many blocks of divs you want inside it,\r\nand this div turn into slides",
    "displayName": "Carousel",
    "methods": [],
    "props": {
      "dots": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Dots under carousel"
      },
      "arrows": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Arrows to control carousel"
      },
      "infinite": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the carousel content will repeat in a loop"
      },
      "autoplay": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the carousel will start to play automatically"
      },
      "speed": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Speed of autoplay"
      },
      "slides_to_show": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "How many slides you want to show"
      },
      "slides_to_scroll": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "How many slides will scroll when you swipe the carousel"
      },
      "center_mode": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "To centralize the carousel"
      },
      "center_padding": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Padding on the sides"
      },
      "swipe_to_slide": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If you can slide to scroll the slides"
      },
      "variable_width": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The slides width varies according to the screen size"
      },
      "responsive": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "Settings of breakpoints"
      },
      "vertical": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If your carousel is vertical"
      },
      "focusOnSelect": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If you can focus on the selected slide"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Your carousel is vertical"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Inline style of the component."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Style class of the component."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Id of the element"
      }
    }
  },
  "src/lib/components/LanrzipAiEditor.react.js": {
    "description": "",
    "displayName": "LanrzipAiEditor",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/LanrzipMermaid.react.js": {
    "description": "",
    "displayName": "LanrzipMermaid",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/LanrzipSelectPopup.react.js": {
    "description": "",
    "displayName": "LanrzipSelectPopup",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/LanrzipUtilsComponents.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "LanrzipUtilsComponents",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  }
}