[project]
name = "FreshPointCLI"
version = "0.2.0"
description = "FreshPoint webpage CLI interface."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Konstantin Mykhailov", email = "constantinemykhailov@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Natural Language :: Czech",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Terminals",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
    "Typing :: Typed"
]
keywords = ["freshpoint", "freshpoint.cz"]
requires-python = ">=3.8"
dependencies = [
    "platformdirs>=3.5.3",
    "prompt_toolkit>=3.0.40",
    "pydantic>=2.0",
    "pygments>=2.17.0",
    "rich>=13.6.0",
    "unidecode>=1.1.0",
    "freshpointsync==0.2.1",
]

[project.optional-dependencies]
lint = [
  "mypy",
  "ruff",
]
test = [
  "pytest",
  "pytest-asyncio",
]
build = [
  "build",
  "twine",
]
dev = [
    "tox",
    "freshpointsync[lint]",
    "freshpointsync[test]",
    "freshpointsync[build]",
]

[project.urls]
"Homepage" = "https://github.com/mykhakos/FreshPointCLI"

[project.scripts]
freshpoint = "freshpointcli.__main__:main"

[options]
package-dir = {"" = "src"}

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
freshpointcli = ["README.md"]

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = [
  "A", "ANN", "ASYNC", "B", "BLE", "COM", "E", "F", "I", "N", "PL", "RUF",
  "S", "UP", "W", "YTT"
]
ignore = [
  # Documenting dunder methods might not add much value.
  "D105",
  # Docstring-related, too restrictive.
  "D205",
  # Docstring-related; these have conflicting rules.
  "D203", "D213",
  # Ignore too long lines (long lines are handled by the formatter)
  "E501",
  # Asserts can be used for internal consistency checking.
  "S101", "B011",
  # Catching Exception is valid and safe in some cases.
  "BLE001",
  # Related to comment formatting, may conflict with code formatters.
  "COM812",
  # Too-many-xx rules, may be too restrictive for more complex code bases.
  "PLR0904", "PLR0911", "PLR0912", "PLR0913", "PLR0917", "PLR2004", "PLR1702",
  "PLR0915",
  # Ignore PEP 604 syntax suggestions, as they are not available in py38.
  "UP007",
]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
  "D100", "D101", "D102", "D103", "D104", "S101", "S106", "ANN001", "ANN002",
  "ANN003", "ANN201", "ANN202", "ANN204", "ANN205", "PLR6301",
]
"docs/source/conf.py" = ["D100", "D103", "A001", "ANN201", "ANN001"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
preview = true

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true
