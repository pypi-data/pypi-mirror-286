---
- name: ping
  ping: 

- name: Packages setroubleshoot
  yum:
    name: jq
    present: True
- name: Packages setroubleshoot
  yum:
    name: setroubleshoot
    present: True

- name: Packages setroubleshoot-server
  yum:
    name: setroubleshoot-server
    present: True

- name: ansible_role_SElinux_agent | copy seinfo.sh
  become: True
  copy: 
    src: seinfo.sh
    dest: /usr/local/bin/seinfo.sh
    owner: root
    group: root
    mode: '0700'

- name: ansible_role_SElinux_agent | Run seinfo.sh
  become: True
  command: /usr/local/bin/seinfo.sh
  
- name: ansible_role_SElinux_agent | Get the alert csv file
  ansible.builtin.fetch:
    src: /var/local/sealert.csv
    dest: /tmp/selinux/{{ inventory_hostname }}.sealert.csv
    flat: yes
  become: True


#  NODE,EVENT,DATE,TIME,SERIAL_NUM,EVENT_KIND,SESSION,SUBJ_PRIME,SUBJ_SEC,SUBJ_KIND,ACTION,RESULT,OBJ_PRIME,OBJ_SEC,OBJ_KIND,HOW
#,BPF,2023-12-01,00:00:05,27182,bpf-program,,,,system,loaded-bpf-program,,2093,,process,

- name: ansible_role_SElinux_agent | Get the se info json file
  ansible.builtin.fetch:
    src: /var/local/sestatus.json
    dest: /tmp/selinux/{{ inventory_hostname }}.sestatus.json
    flat: yes
  become: True

- name: ansible_role_SElinux_agent | Get the se info sestatusb json file
  ansible.builtin.fetch:
    src: /var/local/sestatusb.json
    dest: /tmp/selinux/{{ inventory_hostname }}.sestatusb.json
    flat: yes
  become: True

- name: ansible_role_SElinux_agent | Get the se info setrouble json file
  ansible.builtin.fetch:
    src: /var/local/setroubleshoot.json
    dest: /tmp/selinux/{{ inventory_hostname }}.setroubleshoot.json
    flat: yes
  become: True

- name: ansible_role_SElinux_agent | Get the se info sealert archive
  ansible.builtin.fetch:
    src: /var/local/sealerts.tar.gz
    dest: /tmp/selinux/{{ inventory_hostname }}.sealerts.tar.gz
    flat: yes
  become: True

- name: "load the file"
  set_fact:
    file_content: "{{ lookup('file', '/tmp/selinux/' + inventory_hostname + '.sestatus.json') | b64encode | b64decode | from_json  }}"


- name: "Display the output"
  debug:
    msg: "{{ file_content  }}"


- name: Set fact for total value
  set_fact:
    values: "{{ file_content | json_query('[0]') }}"

- name: Display the total value
  debug:
    var: values.total


- name: ansible_role_SElinux_agent | pack the audit files
  become: True
  command: tar cvzf /var/log/audit.tar.gz .
  args:
      chdir: /var/log/audit

- name: ansible_role_SElinux_agent | Get the audit files
  ansible.builtin.fetch:
     src: /var/log/audit.tar.gz
     dest: /tmp/selinux/audit-{{ inventory_hostname }}.tar.gz
     flat: yes
  become: True

- name: ansible_role_SElinux_agent | remove the temporary file 
  become: True
  ansible.builtin.file:
    path: /var/log/audit.tar.gz 
    state: absent

- name: Make HTTP POST Request
  delegate_to: localhost
  become: False
  uri:
    url: "{{ selinux_api }}/upload_selinux_data/"
    method: POST
    body_format: json
    body:
      hostname: "{{ inventory_hostname }}"
      status: "{{ values.status }}"
      mount: "{{ values.mount }}"
      rootdir: "{{ values.rootdir }}"
      policyname: "{{ values.policyname }}"
      current_mode: "{{ values.currentmode }}"
      configured_mode: "{{ values.modefromfile }}"
      mslstatus: "{{ values.mlsstatus }}"
      memprotect: "{{ values.memprotect }}"
      maxkernel: "{{ values.maxkernel }}"
      total: "{{ values.total }}"
      success: "{{ values.success }}"
      failed: "{{ values.failed }}"
    validate_certs: False  # Set to False to ignore SSL certificate validation
    headers:
      Content-Type: "application/json"
  failed_when: false
  register: response

- name: Set variables
  set_fact:
    api_url: "{{ selinux_api }}/upload_selinux_event/"

- name: "Set fake digesttext variable"
  set_fact:
    digestestext:  "{{ ansible_hostname }}"



- name: Display digestestext
  debug:
    var: digestestext
    
- name: Create SHA256 checksum
  set_fact:
    checksum: "{{ digestestext | hash('sha256') }}"

- name: Display checksum
  debug:
    var: checksum

- name: Upload test event to Django API
  uri:
    url: "{{ selinux_api }}/upload_selinux_event/"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      digest: "{{ checksum }}"
      hostname: "{{ ansible_hostname }}"
      event: "example-event"
      date: "2023-12-01"
      time: "00:00:05"
      serial_num: 27182
      event_kind: "bpf-program"
      session: 1
      subj_prime: 12
      subj_sec: 33
      subj_kind: "system"
      action: "loaded-bpf-program"
      result: "success"
      obj_prime: "2093"
      obj_sec: "1"
      obj_kind: "process"
      how: "By accident"
    validate_certs: False  # Set to False to ignore SSL certificate validation
  failed_when: false
  register: api_response

- name: Display API response
  debug:
    var: api_response






