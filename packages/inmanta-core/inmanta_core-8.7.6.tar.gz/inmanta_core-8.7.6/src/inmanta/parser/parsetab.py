
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLOWnonassocMATCHINGright,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR FSTRING ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyempty : %prec LOWhead : emptyhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expression emptystmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID MLSrelation : relation_def MLSrelation : relation_def emptyrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner emptytypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref empty\n    | constructor\n    | list_def\n    | list_comprehension\n    | map_def\n    | map_lookup empty\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : expression NOT IN expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDboolean_expression : map_lookup IS DEFINEDoperand : expression emptymap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'list_comprehension : \'[\' expression list_comprehension_for list_comprehension_guard \']\'list_comprehension_for_empty : emptylist_comprehension_for : FOR ID IN expression list_comprehension_for_empty\n    | FOR ID IN expression list_comprehension_forlist_comprehension_guard : emptylist_comprehension_guard : IF expression list_comprehension_guarddict_key : RSTRINGdict_key : STRINGpair_list : dict_key \':\' operand \',\' pair_list\n    | dict_key \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : FSTRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : emptyvar_ref : attr_ref emptyattr_ref : var_ref \'.\' IDvar_ref : ns_ref emptyclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'MLS':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,123,125,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,259,262,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[4,21,-3,-4,21,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,82,-17,-18,-19,85,21,-2,-2,21,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,21,-142,-143,-144,-145,-146,-147,-148,-149,-150,21,-183,-20,21,21,21,21,21,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,21,21,21,-100,21,-105,21,-172,21,21,-114,187,187,-116,-109,-110,-111,-112,21,21,-108,-176,-182,-2,-177,-173,-23,-24,-26,21,-117,-125,-118,21,-138,21,-31,-37,-32,264,-68,-69,21,-122,21,21,-139,-113,21,-16,-123,21,-120,21,-2,-2,-121,-95,-124,-119,-140,21,-38,-36,187,187,-71,-72,21,-88,-141,-75,21,321,21,-96,-115,21,21,-126,21,-35,21,21,-33,-34,346,-70,-89,-91,-85,-87,-76,-78,-25,21,-94,21,-73,-74,364,-90,-79,-81,21,-84,-86,]),'ENTITY':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,16,-3,-4,16,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,19,-3,-4,19,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENTATION':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,23,-3,-4,23,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INDEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,30,-3,-4,30,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPORT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,32,-3,-4,32,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'CID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,94,95,96,97,98,99,100,101,104,106,109,110,111,112,115,116,124,126,127,129,141,142,143,144,145,147,148,150,151,152,155,156,164,165,166,167,168,170,171,172,175,179,181,183,184,185,186,189,191,192,193,194,195,196,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,245,248,249,253,254,256,257,260,261,263,264,265,267,268,271,272,277,278,279,280,281,282,286,290,292,293,295,298,306,307,310,311,312,315,316,317,318,319,321,322,324,326,345,346,347,348,351,364,369,370,],[-2,17,-3,-4,17,-7,-8,-9,-10,-11,-12,-13,-14,61,-175,-183,17,-151,-2,-2,-17,-18,-19,-2,17,17,-2,-2,17,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,108,-2,17,-142,-143,-144,-145,-146,-147,-148,-149,-150,17,-183,-20,17,17,17,17,17,-82,-83,-92,-93,-2,-183,-2,-2,-15,155,-174,17,165,17,17,-100,17,-105,17,-172,17,17,-114,-170,-171,17,17,-116,165,-109,-110,-111,-112,17,17,17,-108,165,155,-176,-182,-2,-177,-173,-23,-24,-26,17,-117,17,-125,-118,17,-138,17,-31,-37,251,-2,-45,-46,-47,-41,-32,-2,-68,-69,17,-122,17,17,-139,-113,17,-16,-123,17,-120,17,-2,-2,-121,-95,-124,-119,-140,17,-169,-38,-36,302,303,-43,-44,17,17,-71,-72,17,17,-88,17,17,-141,-75,17,-77,17,-96,-115,17,17,-126,17,-35,-42,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,17,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'FOR':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,80,82,83,84,85,88,89,90,91,93,95,100,104,109,112,114,127,141,142,143,144,150,155,156,164,165,166,167,168,170,171,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,230,232,233,234,236,238,239,240,248,249,263,264,268,277,278,279,280,281,282,286,293,298,307,310,311,312,315,316,317,318,319,321,322,324,326,328,345,346,347,348,351,364,369,370,],[-2,24,-3,-4,24,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,147,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,182,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,24,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,24,-2,-2,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,24,-77,24,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,24,-94,182,-73,-74,-80,-90,-79,-81,-84,-86,]),'IF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,171,172,179,180,181,184,186,189,201,203,204,205,211,216,217,223,224,228,230,232,233,234,236,238,239,240,248,249,263,264,268,277,278,279,280,281,282,286,293,294,298,307,310,311,312,315,316,317,318,319,321,322,324,326,328,345,346,347,348,351,353,354,355,364,369,370,],[-2,35,-3,-4,35,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,35,-117,-125,243,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,35,-2,-2,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,35,-77,35,-96,-115,-126,243,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,35,-94,-2,-73,-74,-80,-90,-79,-128,-129,-127,-81,-84,-86,]),'(':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,86,88,89,90,91,92,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,163,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,237,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,307,310,311,312,315,316,317,318,319,321,322,324,326,345,346,347,348,351,364,369,370,],[-2,31,-3,-4,31,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,71,-151,-2,-2,-17,-18,-19,-2,31,96,-2,31,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,110,31,-142,-143,-144,-145,-146,-147,-148,-149,-150,31,-183,-20,31,31,31,31,31,-82,-83,-92,-93,149,-2,-183,96,110,71,-15,-174,31,31,31,-100,31,-105,31,-172,31,31,-114,-116,-109,-110,-111,-112,31,31,-108,-176,-182,-183,-2,-177,-173,-23,-24,-26,31,-117,-125,-118,31,-138,31,-31,-37,-32,-2,-68,-69,31,-122,31,31,-139,-113,31,-16,-123,31,-120,31,-2,96,-121,-95,71,-124,-119,-140,31,-38,-36,-71,-72,31,-88,-141,-75,31,-77,31,-96,-115,31,31,-126,31,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,31,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'TYPEDEF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,46,-3,-4,46,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'ID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,70,71,72,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,94,95,96,97,98,99,100,101,104,106,109,110,111,112,115,116,123,124,125,126,127,128,129,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,164,165,166,167,168,170,171,172,174,175,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,203,204,205,210,211,213,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,245,247,248,249,250,251,252,254,255,256,257,259,260,261,262,263,264,265,266,267,268,271,272,277,278,279,280,281,282,283,286,290,292,293,295,298,299,302,303,304,306,307,310,311,312,313,315,316,317,318,319,321,322,324,326,331,332,333,335,336,337,338,340,343,344,345,346,347,348,349,350,351,358,359,360,361,362,363,364,367,369,370,],[-2,18,-3,-4,18,-7,-8,-9,-10,-11,-12,-13,-14,62,-175,-183,67,69,-151,-2,80,81,-2,-17,-18,-19,-2,67,89,67,-2,-2,89,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,107,-2,89,-142,-143,-144,-145,-146,-147,-148,-149,-150,89,-183,132,137,137,-20,89,89,89,89,89,-82,-83,-92,-93,-2,-183,-2,-2,-15,156,-174,163,166,89,89,-100,89,-105,89,-172,163,163,-114,-170,-171,67,67,67,67,-116,67,206,-109,-110,-111,-112,89,67,89,222,-108,166,156,223,156,-176,-182,-2,-177,-173,-23,-24,-26,89,-117,67,67,-125,-118,244,89,-138,89,-31,67,67,-37,-40,252,255,-45,-46,-47,-41,-32,-2,-68,-69,89,-122,137,89,89,-139,-113,89,-16,-123,163,-120,89,-2,-2,-121,-95,-124,-119,-140,89,-169,67,-38,-36,-39,-2,-52,304,-62,-43,-44,67,67,67,67,-71,-72,89,67,67,-88,67,67,-141,-75,89,-77,89,-96,222,-115,89,89,-126,89,-35,-48,-2,-2,-65,-42,-33,-34,-2,-70,347,-89,-91,-85,-87,-76,-78,-25,89,-94,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,-80,-90,365,366,-79,-57,-58,-60,-61,-66,-67,-81,-152,-84,-86,]),'NOT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,87,88,89,90,91,93,95,96,98,99,100,101,103,104,106,109,110,111,112,114,127,141,142,143,144,145,146,148,150,155,156,163,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,294,295,298,307,310,311,312,315,316,317,318,319,321,322,324,326,328,345,346,347,348,351,364,369,370,],[-2,48,-3,-4,48,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,78,-2,-17,-18,-19,-2,48,-2,-2,48,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,48,-142,-143,-144,-145,-146,-147,-148,-149,-150,48,-183,-20,48,48,48,48,48,-82,-83,-92,-93,78,-2,-183,-2,-2,-15,-174,48,48,48,-100,48,78,-105,48,-172,48,48,None,78,-116,78,-110,78,78,48,78,48,-108,-176,-182,-183,78,-177,-173,-23,-24,-26,48,-117,-125,-118,48,-138,48,-31,-37,-32,-2,-68,-69,48,-122,48,48,-139,-113,48,-16,-123,48,-120,48,-2,-2,-121,-95,-124,-119,-140,48,-38,-36,-71,-72,48,-88,78,-75,48,-77,48,-96,-115,48,48,-126,78,48,-35,-33,-34,78,-70,-89,-91,-85,-87,-76,-78,-25,48,78,78,-73,-74,-80,-90,-79,-81,-84,-86,]),'INT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,131,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,209,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,269,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,49,-3,-4,49,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,49,-2,-2,49,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,49,-142,-143,-144,-145,-146,-147,-148,-149,-150,49,-183,-20,49,49,49,49,49,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,49,49,49,-100,49,-105,49,-172,49,49,-114,-116,208,-109,-110,-111,-112,49,49,-108,-176,-182,-2,-177,-173,-23,-24,-26,49,-117,-125,-118,49,-138,49,-31,-37,-32,-2,-68,-69,270,49,-122,49,49,-139,-113,49,-16,-123,49,-120,49,-2,-2,-121,-95,-124,-119,-140,49,-38,-36,-71,-72,49,-88,314,-141,-75,49,-77,49,-96,-115,49,49,-126,49,-35,49,49,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,49,-94,49,-73,-74,-80,-90,-79,-81,49,-84,-86,]),'FLOAT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,50,-3,-4,50,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,50,-2,-2,50,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,50,-142,-143,-144,-145,-146,-147,-148,-149,-150,50,-183,-20,50,50,50,50,50,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,50,50,50,-100,50,-105,50,-172,50,50,-114,-116,-109,-110,-111,-112,50,50,-108,-176,-182,-2,-177,-173,-23,-24,-26,50,-117,-125,-118,50,-138,50,-31,-37,-32,-2,-68,-69,50,-122,50,50,-139,-113,50,-16,-123,50,-120,50,-2,-2,-121,-95,-124,-119,-140,50,-38,-36,-71,-72,50,-88,-141,-75,50,-77,50,-96,-115,50,50,-126,50,-35,50,50,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,50,-94,50,-73,-74,-80,-90,-79,-81,50,-84,-86,]),'NULL':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,305,307,310,311,312,315,316,317,318,319,321,322,324,326,334,339,341,342,345,346,347,348,351,364,368,369,370,],[-2,51,-3,-4,51,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,51,-2,-2,51,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,51,-142,-143,-144,-145,-146,-147,-148,-149,-150,51,-183,-20,51,51,51,51,51,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,51,51,51,-100,51,-105,51,-172,51,51,-114,-116,-109,-110,-111,-112,51,51,-108,-176,-182,-2,-177,-173,-23,-24,-26,51,-117,-125,-118,51,-138,51,-31,-37,-32,-2,-68,-69,51,-122,51,51,-139,-113,51,-16,-123,51,-120,51,-2,-2,-121,-95,-124,-119,-140,51,-38,-36,-71,-72,51,-88,-141,-75,51,-77,51,-96,-115,51,51,-126,51,-35,51,51,344,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,51,-94,51,359,361,363,-73,-74,-80,-90,-79,-81,51,-84,-86,]),'REGEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,52,-3,-4,52,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,52,-2,-2,52,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,52,-142,-143,-144,-145,-146,-147,-148,-149,-150,52,-183,-20,52,52,52,52,52,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,52,52,52,-100,52,-105,52,-172,52,52,-114,-116,-109,-110,-111,-112,52,52,-108,-176,-182,-2,-177,-173,-23,-24,-26,52,-117,-125,-118,52,-138,52,-31,-37,-32,-2,-68,-69,52,-122,52,52,-139,-113,52,-16,-123,52,-120,52,-2,-2,-121,-95,-124,-119,-140,52,-38,-36,-71,-72,52,-88,-141,-75,52,-77,52,-96,-115,52,52,-126,52,-35,52,52,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,52,-94,52,-73,-74,-80,-90,-79,-81,52,-84,-86,]),'TRUE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,53,-3,-4,53,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,53,-2,-2,53,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,53,-142,-143,-144,-145,-146,-147,-148,-149,-150,53,-183,-20,53,53,53,53,53,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,53,53,53,-100,53,-105,53,-172,53,53,-114,-116,-109,-110,-111,-112,53,53,-108,-176,-182,-2,-177,-173,-23,-24,-26,53,-117,-125,-118,53,-138,53,-31,-37,-32,-2,-68,-69,53,-122,53,53,-139,-113,53,-16,-123,53,-120,53,-2,-2,-121,-95,-124,-119,-140,53,-38,-36,-71,-72,53,-88,-141,-75,53,-77,53,-96,-115,53,53,-126,53,-35,53,53,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,53,-94,53,-73,-74,-80,-90,-79,-81,53,-84,-86,]),'FALSE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,54,-3,-4,54,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,54,-2,-2,54,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,54,-142,-143,-144,-145,-146,-147,-148,-149,-150,54,-183,-20,54,54,54,54,54,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,54,54,54,-100,54,-105,54,-172,54,54,-114,-116,-109,-110,-111,-112,54,54,-108,-176,-182,-2,-177,-173,-23,-24,-26,54,-117,-125,-118,54,-138,54,-31,-37,-32,-2,-68,-69,54,-122,54,54,-139,-113,54,-16,-123,54,-120,54,-2,-2,-121,-95,-124,-119,-140,54,-38,-36,-71,-72,54,-88,-141,-75,54,-77,54,-96,-115,54,54,-126,54,-35,54,54,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,54,-94,54,-73,-74,-80,-90,-79,-81,54,-84,-86,]),'STRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,296,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,55,-3,-4,55,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,55,-2,-2,55,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,55,-142,-143,-144,-145,-146,-147,-148,-149,-150,55,122,-183,-20,55,55,55,55,55,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,55,55,55,-100,55,-105,55,-172,55,55,-114,-116,-109,-110,-111,-112,55,55,-108,-176,-182,-2,-177,-173,-23,-24,-26,55,-117,-125,-118,55,-138,55,-31,-37,-32,-2,-68,-69,55,-122,55,55,-139,-113,55,-16,-123,55,-120,55,-2,-2,-121,-95,-124,-119,-140,55,-38,-36,-71,-72,55,-88,-141,-75,55,-77,55,-96,-115,55,55,-126,55,122,-35,55,55,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,55,-94,55,-73,-74,-80,-90,-79,-81,55,-84,-86,]),'FSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,56,-3,-4,56,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,56,-2,-2,56,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,56,-142,-143,-144,-145,-146,-147,-148,-149,-150,56,-183,-20,56,56,56,56,56,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,56,56,56,-100,56,-105,56,-172,56,56,-114,-116,-109,-110,-111,-112,56,56,-108,-176,-182,-2,-177,-173,-23,-24,-26,56,-117,-125,-118,56,-138,56,-31,-37,-32,-2,-68,-69,56,-122,56,56,-139,-113,56,-16,-123,56,-120,56,-2,-2,-121,-95,-124,-119,-140,56,-38,-36,-71,-72,56,-88,-141,-75,56,-77,56,-96,-115,56,56,-126,56,-35,56,56,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,56,-94,56,-73,-74,-80,-90,-79,-81,56,-84,-86,]),'RSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,296,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,334,345,346,347,348,351,364,368,369,370,],[-2,57,-3,-4,57,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,57,-2,-2,57,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,57,-142,-143,-144,-145,-146,-147,-148,-149,-150,57,121,-183,-20,57,57,57,57,57,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,57,57,57,-100,57,-105,57,-172,57,57,-114,-116,-109,-110,-111,-112,57,57,-108,-176,-182,-2,-177,-173,-23,-24,-26,57,-117,-125,-118,57,-138,57,-31,-37,-32,-2,-68,-69,57,-122,57,57,-139,-113,57,-16,-123,57,-120,57,-2,-2,-121,-95,-124,-119,-140,57,-38,-36,-71,-72,57,-88,-141,-75,57,-77,57,-96,-115,57,57,-126,57,121,-35,57,57,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,57,-94,57,-73,-74,-80,-90,-79,-81,57,-84,-86,]),'[':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,69,73,74,75,76,77,79,82,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,104,106,109,110,111,112,127,132,141,142,143,144,145,148,150,155,156,163,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,195,196,201,203,204,205,207,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,300,301,307,310,311,312,315,316,317,318,319,321,322,324,326,345,346,347,348,351,364,365,366,369,370,],[-2,58,-3,-4,58,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,72,-151,-2,-2,-17,-18,-19,-2,58,-2,101,58,-97,-98,-99,-101,-102,-103,-104,106,-106,-107,111,58,-142,-143,-144,-145,-146,-147,-148,-149,-150,58,-183,131,-20,58,58,58,58,58,-82,-83,-92,-93,101,-183,-2,111,72,-15,-174,58,58,58,-100,58,-105,58,-172,58,58,-114,-116,131,-109,-110,-111,-112,58,58,-108,-176,-182,-183,-2,-177,-173,-23,-24,-26,58,-117,-125,-118,58,-138,58,-31,-37,258,-41,-32,-2,-68,-69,131,58,-122,58,58,-139,-113,58,-16,-123,58,-120,58,101,-2,-121,-95,-124,-119,-140,58,-38,-36,-71,-72,58,-88,-141,-75,58,-77,58,-96,-115,58,58,-126,58,-35,334,334,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,58,-94,-73,-74,-80,-90,-79,-81,131,131,-84,-86,]),'{':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,73,74,75,76,77,79,82,83,84,85,88,89,90,91,93,95,96,98,99,100,101,104,106,109,110,111,112,127,141,142,143,144,145,148,150,155,156,164,165,166,167,168,170,171,172,179,181,183,184,185,186,189,201,203,204,205,210,211,214,215,216,217,218,223,224,226,228,230,232,233,234,236,238,239,240,243,248,249,263,264,265,268,277,278,279,280,281,282,286,290,292,293,295,298,305,307,310,311,312,315,316,317,318,319,321,322,324,326,339,341,342,345,346,347,348,351,364,369,370,],[-2,59,-3,-4,59,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,59,-2,-2,59,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,59,-142,-143,-144,-145,-146,-147,-148,-149,-150,59,-183,-20,59,59,59,59,59,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,59,59,59,-100,59,-105,59,-172,59,59,-114,-116,-109,-110,-111,-112,59,59,-108,-176,-182,-2,-177,-173,-23,-24,-26,59,-117,-125,-118,59,-138,59,-31,-37,-32,-2,-68,-69,59,-122,59,59,-139,-113,59,-16,-123,59,-120,59,-2,-2,-121,-95,-124,-119,-140,59,-38,-36,-71,-72,59,-88,-141,-75,59,-77,59,-96,-115,59,59,-126,59,-35,59,-33,-34,-2,-70,-89,-91,-85,-87,-76,-78,-25,59,-94,59,59,59,-73,-74,-80,-90,-79,-81,-84,-86,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,60,67,73,82,83,84,85,88,89,90,91,93,95,100,104,109,112,127,141,142,143,144,150,155,156,164,165,166,167,168,170,172,179,181,184,186,189,201,203,204,205,211,216,217,223,224,228,234,236,238,239,240,248,249,263,264,268,277,278,282,286,293,298,307,310,311,312,315,316,317,318,319,322,326,345,346,347,348,351,364,369,370,],[-2,0,-2,-3,-4,-1,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-175,-183,-151,-2,-2,-17,-18,-19,-2,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-5,-183,-20,-82,-83,-92,-93,-2,-183,-2,-2,-15,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-176,-182,-2,-177,-173,-23,-24,-26,-117,-125,-118,-138,-31,-37,-32,-2,-68,-69,-122,-139,-113,-16,-123,-120,-121,-95,-124,-119,-140,-38,-36,-71,-72,-88,-141,-75,-96,-115,-126,-35,-33,-34,-2,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'.':([17,18,20,33,34,47,65,66,67,68,88,89,90,91,95,109,155,156,163,165,166,199,200,206,232,233,317,318,],[-175,-183,70,-2,97,-2,-2,129,-183,-2,151,-183,-2,-2,-174,-172,-176,-182,-183,-177,-173,129,-2,-173,151,-2,349,350,]),'USING':([17,64,155,165,],[-175,128,-176,-177,]),',':([17,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,67,68,88,89,90,91,95,100,104,109,112,114,115,127,135,138,141,142,143,144,150,155,156,159,161,162,163,164,165,166,172,179,181,184,198,199,200,203,204,205,206,211,216,217,222,224,228,234,238,239,240,246,275,276,277,286,293,312,357,],[-175,-151,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,-2,-2,-183,-2,-2,-174,-100,-105,-172,-114,-2,183,-116,213,-158,-109,-110,-111,-112,-108,-176,-182,226,-163,-164,-183,-2,-177,-173,-117,-125,-118,-138,260,261,-2,266,-68,-69,-173,-122,-139,-113,283,-123,-120,-121,-124,-119,-140,296,-157,-156,-141,-115,-126,266,368,]),':':([17,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,61,62,67,68,88,89,90,91,95,100,103,104,109,112,118,121,122,127,131,141,142,143,144,146,150,155,156,164,165,166,172,179,181,184,197,198,199,200,202,206,208,211,216,217,219,220,224,228,234,238,239,240,277,286,289,293,308,309,],[-175,-151,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-142,-143,-144,-145,-146,-147,-148,-149,-150,123,125,-183,-2,-2,-183,-2,-2,-174,-100,171,-105,-172,-114,185,-132,-133,-116,209,-109,-110,-111,-112,218,-108,-176,-182,-2,-177,-173,-117,-125,-118,-138,259,-180,-181,-2,262,-173,269,-122,-139,-113,280,281,-123,-120,-121,-124,-119,-140,-141,-115,324,-126,-178,-179,]),'SEP':([18,33,65,67,89,90,93,156,163,196,200,204,233,235,],[-183,94,94,-183,-183,152,154,-182,-183,154,94,154,152,154,]),'=':([18,33,34,47,89,95,109,137,156,163,166,232,233,251,252,255,302,303,304,],[-183,-2,98,-2,-183,-174,-172,214,-182,214,-173,98,-2,300,301,305,339,341,342,]),'PEQ':([18,33,34,47,89,95,109,156,166,232,233,],[-183,-2,99,-2,-183,-174,-172,-182,-173,99,-2,]),'CMP_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,87,88,89,90,91,95,100,103,104,109,112,114,127,141,142,143,144,146,150,156,163,164,166,172,179,184,211,216,217,224,228,232,233,234,238,239,240,277,286,293,294,311,326,328,],[-183,-151,74,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,74,-2,-183,-2,-2,-174,-100,74,-105,-172,-114,74,-116,-109,-110,74,74,74,-108,-182,-183,74,-173,-117,-125,-138,-122,-139,-113,-123,-120,-2,-2,-121,-124,-119,-140,74,-115,-126,74,74,74,74,]),'IN':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,78,81,87,88,89,90,91,95,100,103,104,109,112,114,127,141,142,143,144,146,150,156,163,164,166,172,179,184,211,216,217,224,228,232,233,234,238,239,240,244,277,286,293,294,311,326,328,],[-183,-151,75,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,145,148,75,-2,-183,-2,-2,-174,-100,75,-105,-172,75,75,-116,75,-110,75,75,75,-108,-182,-183,75,-173,-117,-125,-138,-122,-139,-113,-123,-120,-2,-2,-121,-124,-119,-140,295,75,-115,-126,75,75,75,75,]),'AND':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,87,88,89,90,91,95,100,103,104,109,112,114,127,141,142,143,144,146,150,156,163,164,166,172,179,184,211,216,217,224,228,232,233,234,238,239,240,277,286,293,294,311,326,328,],[-183,-151,76,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,76,-2,-183,-2,-2,-174,-100,76,-105,-172,-114,76,-116,-109,-110,-111,76,76,-108,-182,-183,76,-173,-117,-125,-138,-122,-139,-113,-123,-120,-2,-2,-121,-124,-119,-140,76,-115,-126,76,76,76,76,]),'OR':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,87,88,89,90,91,95,100,103,104,109,112,114,127,141,142,143,144,146,150,156,163,164,166,172,179,184,211,216,217,224,228,232,233,234,238,239,240,277,286,293,294,311,326,328,],[-183,-151,77,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,77,-2,-183,-2,-2,-174,-100,77,-105,-172,-114,77,-116,-109,-110,-111,-112,77,-108,-182,-183,77,-173,-117,-125,-138,-122,-139,-113,-123,-120,-2,-2,-121,-124,-119,-140,77,-115,-126,77,77,77,77,]),'?':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,87,88,89,90,91,95,100,103,104,109,112,114,127,141,142,143,144,146,150,156,163,164,166,172,179,184,192,194,195,196,211,216,217,224,228,232,233,234,238,239,240,277,286,293,294,306,311,326,328,],[-183,-151,79,-2,-2,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-183,79,-2,-183,-2,-2,-174,-100,79,-105,-172,-114,79,-116,-109,-110,-111,-112,79,-108,-182,-183,79,-173,-117,-125,-138,254,256,257,-41,-122,-139,-113,-123,-120,-2,-2,-121,-124,-119,-140,79,-115,-126,79,-42,79,79,79,]),'IS':([18,43,89,163,166,228,234,239,],[63,105,63,63,227,-120,-121,-119,]),')':([21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,71,87,88,89,90,91,95,96,100,104,109,110,112,127,133,134,135,136,138,141,142,143,144,150,156,157,158,159,160,161,162,163,164,166,172,176,179,181,184,211,212,213,216,217,221,222,224,225,226,228,234,238,239,240,273,274,275,276,277,284,285,286,293,323,],[-151,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-142,-143,-144,-145,-146,-147,-148,-149,-150,-2,150,-2,-183,-2,-2,-174,-2,-100,-105,-172,-2,-114,-116,211,-159,-2,-160,-158,-109,-110,-111,-112,-108,-182,224,-165,-2,-166,-163,-164,-183,-2,-173,-117,238,-125,-118,-138,-122,-2,-2,-139,-113,282,-185,-123,-2,-2,-120,-121,-124,-119,-140,-161,-162,-157,-156,-141,-167,-168,-115,-126,-184,]),']':([21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,58,72,88,89,90,91,95,100,104,109,111,112,113,114,115,116,127,134,135,136,138,140,141,142,143,144,150,156,163,164,166,169,172,173,177,178,179,180,181,183,184,208,211,212,213,216,217,224,228,234,238,239,240,241,242,245,258,269,270,273,274,275,276,277,286,293,294,314,327,328,334,353,354,355,356,357,368,371,],[-151,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-142,-143,-144,-145,-146,-147,-148,-149,-150,-2,-2,-2,-183,-2,-2,-174,-100,-105,-172,-2,-114,179,-2,-170,-171,-116,-159,-2,-160,-158,216,-109,-110,-111,-112,-108,-182,-183,-2,-173,228,-117,234,239,240,-125,-2,-118,-2,-138,268,-122,-2,-2,-139,-113,-123,-120,-121,-124,-119,-140,293,-130,-169,306,315,316,-161,-162,-157,-156,-141,-115,-126,-2,348,-131,-2,-154,-128,-129,-127,367,-153,-154,-155,]),'ELSE':([21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,73,88,89,90,91,95,100,104,109,112,127,141,142,143,144,150,156,164,166,167,168,170,171,172,179,181,184,211,216,217,224,228,229,230,231,232,233,234,238,239,240,277,286,291,293,322,351,],[-151,-2,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-20,-2,-183,-2,-2,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-182,-2,-173,-23,-24,-26,-2,-117,-125,-118,-138,-122,-139,-113,-123,-120,289,-2,-22,-2,-2,-121,-124,-119,-140,-141,-115,-21,-126,-25,-79,]),'ELIF':([21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,73,88,89,90,91,95,100,104,109,112,127,141,142,143,144,150,156,164,166,167,168,170,171,172,179,181,184,211,216,217,224,228,229,230,231,232,233,234,238,239,240,277,286,291,293,322,351,],[-151,-2,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-20,-2,-183,-2,-2,-174,-100,-105,-172,-114,-116,-109,-110,-111,-112,-108,-182,-2,-173,-23,-24,-26,-2,-117,-125,-118,-138,-122,-139,-113,-123,-120,290,-2,-22,-2,-2,-121,-124,-119,-140,-141,-115,-21,-126,-25,-79,]),'END':([21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,73,88,89,90,91,95,100,102,104,109,112,123,125,127,141,142,143,144,150,156,164,166,167,168,170,171,172,179,181,184,187,188,190,211,216,217,224,228,229,230,231,232,233,234,238,239,240,247,250,251,252,255,259,262,277,279,280,281,286,287,288,291,293,299,302,303,304,320,321,322,324,325,331,332,333,335,336,337,338,340,343,344,351,352,358,359,360,361,362,363,367,],[-151,-2,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-2,-142,-143,-144,-145,-146,-147,-148,-149,-150,-20,-2,-183,-2,-2,-174,-100,170,-105,-172,-114,189,189,-116,-109,-110,-111,-112,-108,-182,-2,-173,-23,-24,-26,-2,-117,-125,-118,-138,248,249,-40,-122,-139,-113,-123,-120,-2,-2,-22,-2,-2,-121,-124,-119,-140,298,-39,-2,-52,-62,189,189,-141,-2,-77,-2,-115,-27,-28,-21,-126,-48,-2,-2,-65,351,-78,-25,-2,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-152,]),'}':([21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,59,88,89,90,91,95,100,104,109,112,117,119,120,127,141,142,143,144,150,156,164,166,172,179,181,184,211,216,217,224,228,234,238,239,240,246,277,286,293,296,297,329,330,],[-151,-97,-98,-99,-101,-102,-103,-104,-2,-106,-107,-142,-143,-144,-145,-146,-147,-148,-149,-150,-2,-2,-183,-2,-2,-174,-100,-105,-172,-114,184,-137,-136,-116,-109,-110,-111,-112,-108,-182,-2,-173,-117,-125,-118,-138,-122,-139,-113,-123,-120,-121,-124,-119,-140,-2,-141,-115,-126,-2,-2,-134,-135,]),'DICT':([21,49,50,51,52,53,54,55,56,57,123,125,184,187,188,190,247,250,251,252,255,259,262,299,302,303,304,331,332,333,335,336,337,338,340,343,344,358,359,360,361,362,363,367,],[-151,-142,-143,-144,-145,-146,-147,-148,-149,-150,192,192,-138,192,192,-40,192,-39,-2,-52,-62,192,192,-48,-2,-2,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-152,]),'EXTENDS':([61,62,],[124,126,]),'DEFINED':([63,105,227,],[127,172,286,]),'AS':([67,93,107,108,156,],[-183,153,174,175,-182,]),'WHEN':([67,156,203,204,205,312,],[-183,-182,265,-68,-69,-70,]),'MATCHING':([67,156,235,],[-183,-182,292,]),'*':([71,72,96,110,111,139,213,226,],[139,139,139,139,139,215,139,139,]),'PARENTS':([128,266,],[205,205,]),'REL':([130,210,268,315,316,348,],[207,271,-88,-89,-91,-90,]),'UNDEF':([300,301,],[333,337,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'empty':([0,2,6,22,25,29,33,34,43,47,58,59,65,68,71,72,88,90,91,96,110,111,114,135,159,164,171,180,183,192,200,203,210,212,213,225,226,229,230,232,233,246,251,279,281,294,296,297,302,303,311,324,328,],[3,7,7,73,83,84,95,100,104,109,116,119,95,109,136,136,100,95,109,160,160,136,181,212,225,181,231,242,116,253,95,263,116,136,136,160,160,288,231,100,95,297,299,231,231,242,119,119,338,340,345,231,355,]),'body':([2,6,],[5,60,]),'top_stmt':([2,6,],[6,6,]),'entity_def':([2,6,],[8,8,]),'implement_def':([2,6,],[9,9,]),'implementation_def':([2,6,],[10,10,]),'relation':([2,6,],[11,11,]),'statement':([2,6,171,230,279,281,324,],[12,12,230,230,230,230,230,]),'typedef':([2,6,],[13,13,]),'index':([2,6,],[14,14,]),'import':([2,6,],[15,15,]),'class_ref':([2,6,19,30,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,124,126,145,147,148,171,175,183,185,210,214,215,218,226,230,243,260,261,265,267,271,272,279,281,290,292,295,324,],[20,20,64,86,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,198,198,92,219,92,92,237,92,92,92,92,92,92,92,92,92,198,198,92,313,317,318,92,92,92,92,92,92,]),'expression':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[22,22,87,103,112,114,141,142,143,144,146,164,164,164,164,164,164,164,217,164,22,164,164,164,164,164,277,164,22,294,311,22,22,103,326,328,22,]),'relation_def':([2,6,],[25,25,]),'assign':([2,6,171,230,279,281,324,],[26,26,26,26,26,26,26,]),'for':([2,6,171,230,279,281,324,],[27,27,27,27,27,27,27,]),'if':([2,6,171,230,279,281,324,],[28,28,28,28,28,28,28,]),'typedef_inner':([2,6,],[29,29,]),'ns_ref':([2,6,19,30,31,32,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,123,124,125,126,128,145,147,148,171,174,175,183,185,187,188,210,214,215,218,226,230,243,247,259,260,261,262,265,266,267,271,272,279,281,290,292,295,324,],[33,33,65,65,90,93,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,196,200,196,200,204,90,65,90,233,235,65,90,90,196,196,90,90,90,90,90,233,90,196,196,200,200,196,90,204,65,65,65,233,233,90,90,90,233,]),'var_ref':([2,6,19,30,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,124,126,145,147,148,171,175,183,185,210,214,215,218,226,230,243,260,261,265,267,271,272,279,281,290,292,295,324,],[34,34,66,66,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,199,199,88,66,88,232,66,88,88,88,88,88,88,88,232,88,199,199,88,66,66,66,232,232,88,88,88,232,]),'boolean_expression':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'constant':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,300,301,324,334,368,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,331,335,37,357,357,]),'function_call':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'constructor':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,175,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,236,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'list_def':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'list_comprehension':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'map_def':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,305,324,339,341,342,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,343,42,358,360,362,]),'map_lookup':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'index_lookup':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'conditional_expression':([2,6,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,145,148,171,183,185,210,214,215,218,226,230,243,265,279,281,290,292,295,324,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'attr_ref':([2,6,19,30,31,35,48,58,74,75,76,77,79,96,98,99,101,106,110,111,124,126,145,147,148,171,175,183,185,210,214,215,218,226,230,243,260,261,265,267,271,272,279,281,290,292,295,324,],[47,47,68,68,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,68,68,91,68,91,47,68,91,91,91,91,91,91,91,47,91,68,68,91,68,68,68,47,47,91,91,91,47,]),'if_body':([35,290,],[102,325,]),'operand_list':([58,183,210,],[113,245,272,]),'operand':([58,96,98,99,101,106,110,111,148,183,185,210,214,215,226,],[115,162,167,168,169,173,162,177,220,115,246,115,275,276,162,]),'pair_list':([59,296,],[117,329,]),'dict_key':([59,296,],[118,118,]),'pair_list_empty':([59,296,297,],[120,120,330,]),'multi':([69,132,207,365,366,],[130,210,267,369,370,]),'param_list':([71,72,111,213,],[133,140,178,274,]),'param_list_empty':([71,72,111,212,213,],[134,134,134,273,134,]),'param_list_element':([71,72,96,110,111,213,226,],[135,135,161,161,135,135,161,]),'wrapped_kwargs':([71,72,96,110,111,213,226,],[138,138,138,138,138,138,138,]),'function_param_list':([96,110,226,],[157,176,285,]),'function_param_list_empty':([96,110,225,226,],[158,158,284,158,]),'function_param_list_element':([96,110,226,],[159,159,159,]),'list_comprehension_for':([114,328,],[180,354,]),'entity_body_outer':([123,125,259,262,],[186,201,307,310,]),'entity_body':([123,125,187,259,262,],[188,188,247,188,188,]),'attr':([123,125,187,188,247,259,262,],[190,190,190,250,250,190,190,]),'attr_type':([123,125,187,188,247,259,262,],[191,191,191,191,191,191,191,]),'attr_type_opt':([123,125,187,188,247,259,262,],[193,193,193,193,193,193,193,]),'attr_type_multi':([123,125,187,188,247,259,262,],[194,194,194,194,194,194,194,]),'attr_base_type':([123,125,187,188,247,259,262,],[195,195,195,195,195,195,195,]),'class_ref_list':([124,126,260,261,],[197,202,308,309,]),'implement_ns_list':([128,266,],[203,312,]),'id_list':([149,283,],[221,323,]),'stmt_list':([171,230,279,281,324,],[229,291,320,320,352,]),'list_comprehension_guard':([180,294,],[241,327,]),'implementation':([219,],[278,]),'implementation_head':([219,],[279,]),'if_next':([229,],[287,]),'block':([279,281,],[319,322,]),'constant_list':([300,301,],[332,336,]),'list_comprehension_for_empty':([328,],[353,]),'constants':([334,368,],[356,371,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',130),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',141),
  ('head -> empty','head',1,'p_main_head','plyInmantaParser.py',145),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',150),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',155),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',162),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',167),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',168),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',169),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',170),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',171),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',172),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',173),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',174),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',184),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',190),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',201),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',202),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',203),
  ('statement -> expression empty','statement',2,'p_stmt','plyInmantaParser.py',204),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',218),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',225),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',230),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',236),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',242),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',249),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',255),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',262),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',268),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',274),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',286),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',293),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',298),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',305),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',310),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',315),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',320),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',325),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',330),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',336),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',341),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',347),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',353),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',354),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',360),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',361),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',362),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',367),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',368),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',369),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',370),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',377),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',383),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',384),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',390),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',396),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',397),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',398),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',399),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',400),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',401),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',408),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',414),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',420),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',425),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',431),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',437),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',444),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',449),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',454),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',459),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',460),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',469),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',470),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',480),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',493),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',498),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',503),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',508),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',514),
  ('relation -> class_ref ID multi REL multi class_ref ID MLS','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',525),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',564),
  ('relation -> relation_def empty','relation',2,'p_relation_outer','plyInmantaParser.py',571),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',576),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',582),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',588),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',594),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',600),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',605),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',610),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',615),
  ('typedef -> typedef_inner empty','typedef',2,'p_typedef_outer','plyInmantaParser.py',623),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',628),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',635),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',642),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',650),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',660),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',661),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',662),
  ('expression -> var_ref empty','expression',2,'p_expression','plyInmantaParser.py',663),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',664),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',665),
  ('expression -> list_comprehension','expression',1,'p_expression','plyInmantaParser.py',666),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',667),
  ('expression -> map_lookup empty','expression',2,'p_expression','plyInmantaParser.py',668),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',669),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',670),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',675),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',680),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',681),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',682),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',683),
  ('boolean_expression -> expression NOT IN expression','boolean_expression',4,'p_boolean_expression_not_in','plyInmantaParser.py',692),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',698),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',704),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',710),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',716),
  ('operand -> expression empty','operand',2,'p_operand','plyInmantaParser.py',736),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',741),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',742),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',743),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',748),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',754),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',761),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',766),
  ('list_comprehension -> [ expression list_comprehension_for list_comprehension_guard ]','list_comprehension',5,'p_list_comprehension','plyInmantaParser.py',779),
  ('list_comprehension_for_empty -> empty','list_comprehension_for_empty',1,'p_list_comprehension_for_empty','plyInmantaParser.py',804),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for_empty','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',809),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',810),
  ('list_comprehension_guard -> empty','list_comprehension_guard',1,'p_list_comprehension_guard_empty','plyInmantaParser.py',817),
  ('list_comprehension_guard -> IF expression list_comprehension_guard','list_comprehension_guard',3,'p_list_comprehension_guard','plyInmantaParser.py',822),
  ('dict_key -> RSTRING','dict_key',1,'p_r_string_dict_key','plyInmantaParser.py',832),
  ('dict_key -> STRING','dict_key',1,'p_string_dict_key','plyInmantaParser.py',837),
  ('pair_list -> dict_key : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',852),
  ('pair_list -> dict_key : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',853),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',862),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',863),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',868),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',874),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',880),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',887),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',897),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',898),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',905),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',911),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',917),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',923),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',929),
  ('constant -> FSTRING','constant',1,'p_constant_fstring','plyInmantaParser.py',935),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',998),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',1004),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',1116),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',1122),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',1127),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',1132),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',1138),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',1144),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',1150),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',1156),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',1157),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1163),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1164),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',1179),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',1186),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',1192),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',1193),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1199),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1200),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1218),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1224),
  ('operand_list -> empty','operand_list',1,'p_operand_list_term_2','plyInmantaParser.py',1229),
  ('var_ref -> attr_ref empty','var_ref',2,'p_var_ref','plyInmantaParser.py',1234),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1239),
  ('var_ref -> ns_ref empty','var_ref',2,'p_var_ref_2','plyInmantaParser.py',1245),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1251),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1262),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1268),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1283),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1289),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1294),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1299),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1305),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1311),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1316),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1322),
]
