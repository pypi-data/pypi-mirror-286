# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.env_var_source_config_map_key_ref import EnvVarSourceConfigMapKeyRef
from openapi_server.models.env_var_source_secret_key_ref import EnvVarSourceSecretKeyRef
from openapi_server.models.object_field_selector import ObjectFieldSelector
from openapi_server import util

from openapi_server.models.env_var_source_config_map_key_ref import EnvVarSourceConfigMapKeyRef  # noqa: E501
from openapi_server.models.env_var_source_secret_key_ref import EnvVarSourceSecretKeyRef  # noqa: E501
from openapi_server.models.object_field_selector import ObjectFieldSelector  # noqa: E501

class EnvVarSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secret_key_ref=None, config_map_key_ref=None, field_ref=None):  # noqa: E501
        """EnvVarSource - a model defined in OpenAPI

        :param secret_key_ref: The secret_key_ref of this EnvVarSource.  # noqa: E501
        :type secret_key_ref: EnvVarSourceSecretKeyRef
        :param config_map_key_ref: The config_map_key_ref of this EnvVarSource.  # noqa: E501
        :type config_map_key_ref: EnvVarSourceConfigMapKeyRef
        :param field_ref: The field_ref of this EnvVarSource.  # noqa: E501
        :type field_ref: ObjectFieldSelector
        """
        self.openapi_types = {
            'secret_key_ref': EnvVarSourceSecretKeyRef,
            'config_map_key_ref': EnvVarSourceConfigMapKeyRef,
            'field_ref': ObjectFieldSelector
        }

        self.attribute_map = {
            'secret_key_ref': 'secret_key_ref',
            'config_map_key_ref': 'config_map_key_ref',
            'field_ref': 'field_ref'
        }

        self._secret_key_ref = secret_key_ref
        self._config_map_key_ref = config_map_key_ref
        self._field_ref = field_ref

    @classmethod
    def from_dict(cls, dikt) -> 'EnvVarSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EnvVarSource of this EnvVarSource.  # noqa: E501
        :rtype: EnvVarSource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret_key_ref(self):
        """Gets the secret_key_ref of this EnvVarSource.


        :return: The secret_key_ref of this EnvVarSource.
        :rtype: EnvVarSourceSecretKeyRef
        """
        return self._secret_key_ref

    @secret_key_ref.setter
    def secret_key_ref(self, secret_key_ref):
        """Sets the secret_key_ref of this EnvVarSource.


        :param secret_key_ref: The secret_key_ref of this EnvVarSource.
        :type secret_key_ref: EnvVarSourceSecretKeyRef
        """

        self._secret_key_ref = secret_key_ref

    @property
    def config_map_key_ref(self):
        """Gets the config_map_key_ref of this EnvVarSource.


        :return: The config_map_key_ref of this EnvVarSource.
        :rtype: EnvVarSourceConfigMapKeyRef
        """
        return self._config_map_key_ref

    @config_map_key_ref.setter
    def config_map_key_ref(self, config_map_key_ref):
        """Sets the config_map_key_ref of this EnvVarSource.


        :param config_map_key_ref: The config_map_key_ref of this EnvVarSource.
        :type config_map_key_ref: EnvVarSourceConfigMapKeyRef
        """

        self._config_map_key_ref = config_map_key_ref

    @property
    def field_ref(self):
        """Gets the field_ref of this EnvVarSource.


        :return: The field_ref of this EnvVarSource.
        :rtype: ObjectFieldSelector
        """
        return self._field_ref

    @field_ref.setter
    def field_ref(self, field_ref):
        """Sets the field_ref of this EnvVarSource.


        :param field_ref: The field_ref of this EnvVarSource.
        :type field_ref: ObjectFieldSelector
        """

        self._field_ref = field_ref
