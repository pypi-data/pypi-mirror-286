# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.http_get import HttpGet
from openapi_server.models.tcp_socket import TcpSocket
from openapi_server import util

from openapi_server.models.http_get import HttpGet  # noqa: E501
from openapi_server.models.tcp_socket import TcpSocket  # noqa: E501

class LifeCycleHandler(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exec_command=None, http_get=None, tcp_socket=None):  # noqa: E501
        """LifeCycleHandler - a model defined in OpenAPI

        :param exec_command: The exec_command of this LifeCycleHandler.  # noqa: E501
        :type exec_command: List[str]
        :param http_get: The http_get of this LifeCycleHandler.  # noqa: E501
        :type http_get: HttpGet
        :param tcp_socket: The tcp_socket of this LifeCycleHandler.  # noqa: E501
        :type tcp_socket: TcpSocket
        """
        self.openapi_types = {
            'exec_command': List[str],
            'http_get': HttpGet,
            'tcp_socket': TcpSocket
        }

        self.attribute_map = {
            'exec_command': 'exec_command',
            'http_get': 'http_get',
            'tcp_socket': 'tcp_socket'
        }

        self._exec_command = exec_command
        self._http_get = http_get
        self._tcp_socket = tcp_socket

    @classmethod
    def from_dict(cls, dikt) -> 'LifeCycleHandler':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LifeCycleHandler of this LifeCycleHandler.  # noqa: E501
        :rtype: LifeCycleHandler
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exec_command(self):
        """Gets the exec_command of this LifeCycleHandler.

        Command line to execute inside the container  # noqa: E501

        :return: The exec_command of this LifeCycleHandler.
        :rtype: List[str]
        """
        return self._exec_command

    @exec_command.setter
    def exec_command(self, exec_command):
        """Sets the exec_command of this LifeCycleHandler.

        Command line to execute inside the container  # noqa: E501

        :param exec_command: The exec_command of this LifeCycleHandler.
        :type exec_command: List[str]
        """

        self._exec_command = exec_command

    @property
    def http_get(self):
        """Gets the http_get of this LifeCycleHandler.


        :return: The http_get of this LifeCycleHandler.
        :rtype: HttpGet
        """
        return self._http_get

    @http_get.setter
    def http_get(self, http_get):
        """Sets the http_get of this LifeCycleHandler.


        :param http_get: The http_get of this LifeCycleHandler.
        :type http_get: HttpGet
        """

        self._http_get = http_get

    @property
    def tcp_socket(self):
        """Gets the tcp_socket of this LifeCycleHandler.


        :return: The tcp_socket of this LifeCycleHandler.
        :rtype: TcpSocket
        """
        return self._tcp_socket

    @tcp_socket.setter
    def tcp_socket(self, tcp_socket):
        """Sets the tcp_socket of this LifeCycleHandler.


        :param tcp_socket: The tcp_socket of this LifeCycleHandler.
        :type tcp_socket: TcpSocket
        """

        self._tcp_socket = tcp_socket
