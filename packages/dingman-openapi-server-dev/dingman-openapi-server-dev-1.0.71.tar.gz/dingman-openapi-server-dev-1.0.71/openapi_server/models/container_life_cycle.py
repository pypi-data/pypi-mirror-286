# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.life_cycle_handler import LifeCycleHandler
from openapi_server import util

from openapi_server.models.life_cycle_handler import LifeCycleHandler  # noqa: E501

class ContainerLifeCycle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, post_start=None, pre_stop=None):  # noqa: E501
        """ContainerLifeCycle - a model defined in OpenAPI

        :param post_start: The post_start of this ContainerLifeCycle.  # noqa: E501
        :type post_start: LifeCycleHandler
        :param pre_stop: The pre_stop of this ContainerLifeCycle.  # noqa: E501
        :type pre_stop: LifeCycleHandler
        """
        self.openapi_types = {
            'post_start': LifeCycleHandler,
            'pre_stop': LifeCycleHandler
        }

        self.attribute_map = {
            'post_start': 'post_start',
            'pre_stop': 'pre_stop'
        }

        self._post_start = post_start
        self._pre_stop = pre_stop

    @classmethod
    def from_dict(cls, dikt) -> 'ContainerLifeCycle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContainerLifeCycle of this ContainerLifeCycle.  # noqa: E501
        :rtype: ContainerLifeCycle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def post_start(self):
        """Gets the post_start of this ContainerLifeCycle.


        :return: The post_start of this ContainerLifeCycle.
        :rtype: LifeCycleHandler
        """
        return self._post_start

    @post_start.setter
    def post_start(self, post_start):
        """Sets the post_start of this ContainerLifeCycle.


        :param post_start: The post_start of this ContainerLifeCycle.
        :type post_start: LifeCycleHandler
        """

        self._post_start = post_start

    @property
    def pre_stop(self):
        """Gets the pre_stop of this ContainerLifeCycle.


        :return: The pre_stop of this ContainerLifeCycle.
        :rtype: LifeCycleHandler
        """
        return self._pre_stop

    @pre_stop.setter
    def pre_stop(self, pre_stop):
        """Sets the pre_stop of this ContainerLifeCycle.


        :param pre_stop: The pre_stop of this ContainerLifeCycle.
        :type pre_stop: LifeCycleHandler
        """

        self._pre_stop = pre_stop
