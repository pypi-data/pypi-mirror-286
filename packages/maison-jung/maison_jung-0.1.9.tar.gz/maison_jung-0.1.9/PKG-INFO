Metadata-Version: 2.1
Name: maison-jung
Version: 0.1.9
Summary: Custom home IOT server.
Home-page: https://github.com/gruvw/maison-jung
Author: gruvw
Author-email: gruvw.dev@gmail.com
Requires-Python: >=3.7,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: adafruit-io (>=2.5.0,<3.0.0)
Requires-Dist: click (>=8.0.1,<9.0.0)
Requires-Dist: printbetter (>=2.2,<3.0)
Requires-Dist: python-telegram-bot (>=13.7,<14.0)
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Requires-Dist: schedule (>=1.1.0,<2.0.0)
Requires-Dist: suntime (>=1.2.5,<2.0.0)
Requires-Dist: tinydb (>=4.5.1,<5.0.0)
Description-Content-Type: text/markdown

# Maison Jung

This is the python package that runs on the Raspberry Pi managing the custom made IOT in my house.

## Usage

The package exposes a CLI: `maison-jung --help`

It requires multiple files to be inside a working directory in order to run properly:

- _config.yml_: where are stored API keys (for the [telegram bot](https://github.com/python-telegram-bot/python-telegram-bot) and [Adafruit IO](https://io.adafruit.com/Dedelejardinier/dashboards)), all the [wemos](https://www.wemos.cc/) ips, ...
- _options.yml_: used to build the interactive inline keyboard menu on telegram
- _schedules.yml_: defines the scheduled tasks
- _database.json_: [TinyDB](https://github.com/msiemens/tinydb) database

## To Do

- [ ] Type hinting
- [ ] Text files data in database table (ready for drop)
- [ ] Flask server (website)

