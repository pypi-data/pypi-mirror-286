## Config file for running all batch scripts on different nodes
[BATCH]
account = m3525
## Since the diagnostics take 15-30 min, the short/debug partition works with minimal/no queue time
partition = debug

[ENV]
## Default e3sm unified env for compy
source = /global/common/software/e3sm/anaconda_envs/load_latest_e3sm_unified_pm-cpu.sh
## source for Cori: /global/common/software/e3sm/anaconda_envs/load_latest_e3sm_unified_cori-haswell.sh
## if using a user specific environment, source conda and activate user environment (env = work)
## Otherwise, keep as is.
env =

[CMD]
## asediag directory
asediag_dir = /global/homes/h/hass877/MODS/newAsediag/asediag/
## Control case directory
inDirectory1 = /global/cfs/projectdirs/m3525/mhass004/clim_out/
## Test case directory
inDirectory2 = /global/cfs/projectdirs/m3525/mhass004/clim_out/
## asediag output directory (will also contain the batch scripts and the sediag logs)
outDirectory = /global/cfs/cdirs/m3525/www/hass877/share/aer_diag
## No values indicate inDirectory as outDirectory 
## or put full directory path (ex: outDirectory = some/output/dir)
## Control case name
case1 = so.ne30pg2_EC30to60E2r2
## Test case name
case2 = ena.ne30pg2_EC30to60E2r2
## No values indicates climo files in case run directory
## and case names are inferred from the input directories 
## model name cam for E3SMv1
model = eam
## Curretly supported regions Global, NA, CONUS, EUS, NH, SH, NH_pole, SH_pole, Tropics
region = Global
walltime = 00:15:00
## For default ne30, 10 min is enough. For RRM, it can be 10-30 min depending
## Specify SCRIP filename or pg2 grid resolution required for spatial maps in SE grid
## Resolution example: for uniform resolution ne30pg2 use scrip_file = 30
## For lat-lon keep as is
scrip_file = /global/homes/h/hass877/MODS/ne30pg2_SCRIP.nc
## Available diags options: latlon,tables,bplots,extra,forcings,surface,250,500,850,zonal,extraprofs
## Each diag option will be submitted to a different node
diags = bplots,extraprofs

[EXTRA]
## This section contains the extra variables (beyond aerosol budget)
## Any relevant output variables can be mentioned here
## vlist is activated with the `extra` diagnostics feature 
## Variables in the vlist will be part of the horizontal contour plots
## vlist variables should can not have the `lev` dim
vlist = AODVIS,AODABS,AODALL,AODBC,AODDUST,AODPOM,AODSO4,AODSOA,AODSS,AODMODE1,
        AODMODE2,AODMODE3,AODMODE4,BURDENBC,BURDENSO4,BURDENDUST,BURDENPOM,
        BURDENSOA,BURDENMOM,BURDENSEASALT,BURDEN1,BURDEN2,BURDEN3,BURDEN4
## Associated units for the variables in vlist
## Note: make sure length(vlist) == length(vunits)
vunit = unitless,unitless,unitless,unitless,unitless,unitless,unitless,unitless,
        unitless,unitless,unitless,unitless,unitless,kg m$^{-2}$,kg m$^{-2}$,
        kg m$^{-2}$,kg m$^{-2}$,kg m$^{-2}$,kg m$^{-2}$,kg m$^{-2}$,kg m$^{-2}$,
        kg m$^{-2}$,kg m$^{-2}$,kg m$^{-2}$
## plist is activated with the `extraprofs` diagnostics feature 
## Variables in the plist will be part of the Vertical contour plots of zonal means
## plist variables must have the `lev` dim
plist = CCN3,CLDLIQ,CLDICE,dgnd_a01,dgnd_a02,dgnd_a03,dgnd_a04,dgnw_a01,dgnw_a02,
        dgnw_a03,dgnw_a04,bc_a1_sfgaex1,bc_a4_sfgaex1,pom_a1_sfgaex1,pom_a4_sfgaex1,
        so4_a1_sfgaex1,so4_a2_sfgaex1,num_a1_sfgaex1,num_a4_sfgaex1,
        H2SO4_sfgaex1,bc_a1_sfcoag1,bc_a4_sfcoag1,pom_a1_sfcoag1,pom_a4_sfcoag1,
        so4_a1_sfcoag1,so4_a2_sfcoag1,num_a1_sfcoag1,num_a2_sfcoag1,num_a4_sfcoag1
## Associated units for the variables in plist
punit = 1/cm$^3$,kg/kg,kg/kg,m,m,m,m,m,m,m,m,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,
        kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,
        kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s,kg/m$^3$/s
## ProfLoc activates with zonal and extraprofs options
## Produces local vertical profiles
## example: Loc1:lat1:lon1,Loc2:lat2:lon2 . . .
ProfLoc = SGP:36.605:-97.485
## Run this config by: python submit_asediag_batches.py
        
