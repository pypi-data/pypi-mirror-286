"use strict";(self.webpackChunkjlab_homepage=self.webpackChunkjlab_homepage||[]).push([[675],{675:(e,n,t)=>{t.r(n),t.d(n,{default:()=>p});var o=t(974),a=t(607),s=t(256),i=t(53),r=t(74),d=t(465);async function c(e="",n={}){const t=d.ServerConnection.makeSettings(),o=r.URLExt.join(t.baseUrl,"jlab-homepage",e);let a;try{a=await d.ServerConnection.makeRequest(o,n,t)}catch(e){throw new d.ServerConnection.NetworkError(e)}let s=await a.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new d.ServerConnection.ResponseError(a,s.message||s);return s}class l extends s.Widget{constructor(e){super();const n=e;this.addClass("my-apodWidget");const t=document.createElement("div");t.id="groupContainer",this.node.innerHTML="\n\n        <h2>Workspace</h2>\n        <h4>Bei Fragen oder Gruppenwechsel kontaktieren Sie uns bitte Ã¼ber admin@databrix.org</h4>\n      ",this.node.appendChild(t);for(const e in n){const o=document.createElement("div");o.classList.add("card");const a=document.createElement("div");a.classList.add("group-name"),a.textContent=e;const s=document.createElement("div");s.classList.add("group-items"),n[e].forEach((e=>{const n=document.createElement("div");n.textContent=`- ${e}`,s.appendChild(n)})),o.appendChild(a),o.appendChild(s),t.appendChild(o)}}}class u extends s.Widget{constructor(e,n){super();const t=document.createElement("div");t.classList.add("button-container"),this.addClass("my-apodWidget"),this.node.innerHTML='\n        <div class="container">\n          <h1>Databrix Lab</h1>\n          <p class="subtitle">Lernen Sie Data Science und Machine Learning in der Praxis!</p>\n        </div>\n      ',this.node.appendChild(t),t.innerHTML=n?'\n          <button data-commandLinker-command="nbgrader:open-formgrader" class="button">\n            <div class="icon"></div>\n            <span>Projekte verwalten</span>\n          </button>\n          <button id="switchGroupButton" class="button secondary">\n            <div class="icon"></div>\n            <span>Workspace Infos</span>\n          </button>\n        ':'\n          <button data-commandLinker-command="nbgrader:open-assignment-list" class="button">\n            <div class="icon"></div>\n            <span>Projekte starten</span>\n          </button>\n          <button id="switchGroupButton" class="button secondary">\n            <div class="icon"></div>\n            <span>Mein Workspace</span>\n          </button>\n        ',this.node.querySelector("#switchGroupButton").addEventListener("click",(()=>{this.showgroupinfo(e,n)}))}async showgroupinfo(e,n){try{const t={username:e,Rolle:n},o=await c("gruppeninfo",{body:JSON.stringify(t),method:"POST"}),s=new l(o);(0,a.showDialog)({title:"Workspace Information",body:s,buttons:[a.Dialog.okButton()]})}catch(e){let n="Could not retrieve group information.";e.response&&404===e.response.status?n="Server endpoint not found.":e.message&&(n=e.message),(0,a.showDialog)({title:"Error",body:n,buttons:[a.Dialog.okButton()]})}}}const p={id:"jlab_homepage:plugin",description:"A JupyterLab extension for databrix homepage with frontend and backend",autoStart:!0,requires:[a.ICommandPalette,o.ILabShell],optional:[o.ILayoutRestorer],activate:function(e,n,t,o,s){var r,d;console.log("JupyterLab extension databrix homepage is activated!");let l=null;c("gruppeninfo").then((e=>{l=e.dozent})).catch((e=>{console.error(`The jlab_homepage server extension appears to be missing.\n${e}`)}));const p=null===(d=null===(r=e.serviceManager.user)||void 0===r?void 0:r.identity)||void 0===d?void 0:d.username;let h;const b="launcher:create";e.commands.addCommand(b,{label:"Databrix Lab Homepage",execute:()=>{const n=new u(null!=p?p:"unknown",null!=l&&l);h=new a.MainAreaWidget({content:n});const o="home-"+m.id++;h.id=o,h.title.label="Databrix Lab Homepage",h.title.closable=!0,e.shell.add(h,"main"),e.shell.activateById(h.id),t.layoutModified.connect((()=>{h.title.closable=(0,i.toArray)(e.shell.widgets("main")).length>1}),h)}}),t&&Promise.all([e.restored,null==s?void 0:s.model.restored]).then((()=>{t.layoutModified.connect((()=>{t.isEmpty("main")&&e.commands.execute(b)}))})),n.addItem({command:b,category:"Databrix"}),t&&(t.addButtonEnabled=!0,t.addRequested.connect(((n,t)=>{var o;const a=(null===(o=t.currentTitle)||void 0===o?void 0:o.owner.id)||t.titles[t.titles.length-1].owner.id;return e.commands.execute(b,{ref:a})})))}};var m;!function(e){e.id=0}(m||(m={}))}}]);