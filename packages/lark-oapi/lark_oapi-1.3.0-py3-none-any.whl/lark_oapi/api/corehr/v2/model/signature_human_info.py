# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .enum import Enum


class SignatureHumanInfo(object):
    _types = {
        "id": str,
        "human_type": Enum,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.human_type: Optional[Enum] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SignatureHumanInfoBuilder":
        return SignatureHumanInfoBuilder()


class SignatureHumanInfoBuilder(object):
    def __init__(self) -> None:
        self._signature_human_info = SignatureHumanInfo()

    def id(self, id: str) -> "SignatureHumanInfoBuilder":
        self._signature_human_info.id = id
        return self

    def human_type(self, human_type: Enum) -> "SignatureHumanInfoBuilder":
        self._signature_human_info.human_type = human_type
        return self

    def build(self) -> "SignatureHumanInfo":
        return self._signature_human_info
